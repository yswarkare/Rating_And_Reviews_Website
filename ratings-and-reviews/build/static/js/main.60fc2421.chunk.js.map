{"version":3,"sources":["Components/searchBox.js","Components/Navbars/adminNavbar.js","Redux/Actions/axiosDefaults.js","Redux/Actions/userActions.js","Redux/Actions/actionTypes.js","Redux/Actions/userProfileActions.js","Redux/Actions/productActions.js","Redux/Actions/categoriesActions.js","Redux/Actions/subCategoriesActions.js","Redux/Actions/subSubCategoriesActions.js","Components/Navbars/header.js","Components/Products/WrappedProduct.js","Components/Products/withProductWrapper.js","Components/Products/products.js","Components/homePage.js","Components/User/userLogin.js","Components/User/userRegistration.js","Redux/Actions/adminActions.js","Components/Admin/adminDashboard.js","Components/Admin/adminProfile.js","Components/Navbars/userNavbar.js","Components/User/userAccount.js","Components/Categories/Category.js","Components/Categories/SubCategory.js","Components/Categories/SubSubCategory.js","Components/Categories/AllCategories.js","Components/Products/addProducts.js","Components/User/userDashboard.js","Components/User/userProfile.js","Components/Products/withProductPageHOC.js","Components/Ratings/GiveRating.js","Redux/Actions/ratingsActions.js","Components/Ratings/ShowRating.js","Components/Reviews/UserReview.js","Redux/Actions/reviewsActions.js","Components/Reviews/ProductReviewsList.js","Components/Products/productPage.js","Components/Wrapper.js","App.js","serviceWorker.js","Redux/States/categoriesState.js","Redux/Reducers/categoriesReducer.js","Redux/States/subCategoriesState.js","Redux/Reducers/subCategoriesReducer.js","Redux/States/subSubCategoriesState.js","Redux/Reducers/subSubCategoriesReducer.js","Redux/States/productState.js","Redux/Reducers/productReducer.js","Redux/States/userState.js","Redux/Reducers/userReducer.js","Redux/States/ratingsState.js","Redux/Reducers/ratingsReducer.js","Redux/States/reviewsState.js","Redux/Reducers/reviewsReducer.js","Redux/store.js","index.js"],"names":["SearchBox","className","Component","AdminNavbar","Nav","NavItem","to","defaults","Cookies","get","baseURL","headers","api","axios","create","Axios","isUserLoggedIn","dispatch","a","res","type","payload","getUserInfo","userIsAdmin","setUserUpdate","getAllProducts","getProduct","product","patch","sendProductId","_id","console","log","getAllCategories","admin","getAllSubCategories","getAllSubSubCategories","Header","componentDidMount","user","props","loginStatus","emailId","loggedIn","setTokenInUser","onClickSetUserLogout","setUserLogout","Navbar","this","onClick","connect","state","users","errors","categories","subCategories","subSubCategories","WrappedProduct","withProductWrapper","products","map","index","key","Card","CardImg","top","width","src","images","alt","productName","CardBody","CardTitle","CardSubtitle","brandName","CardText","Button","Products","inputErrors","registrationRedirect","HomePage","UserLogin","onChangeGetUsernameOrEmailId","usernameOrEmail","getUsernameOrEmailId","onChangeGetPassword","password","getPassword","onClickUserLogin","userLogin","loginDetails","TextField","onChange","e","target","value","id","label","variant","autoComplete","loginRedirect","color","post","then","catch","err","UserRegistraion","onChangeSetFirstName","firstName","setFirstName","onChangeSetMiddleName","middleName","setMiddleName","onChangeSetLastName","lastName","setLastName","onChangeSetUsername","username","setUsername","onChangeSetEmailId","setEmailId","onChangeSetPassword","setPassword","onChangeSetRepeatPassword","repeatPassword","setRepeatPassword","onClickRegisterUser","registerUser","getAdminInfo","AdminDashboard","AdminProfile","Container","Row","Col","UserNavbar","UserAccount","Category","onChangeSetCategory","categoryName","setCategory","onClickAddCategory","category","addCategory","onClickEditCategoryName","editCategory","onClickUpdateCategory","updateCategoryName","onClickDeleteCategory","deleteCategory","scope","Tooltip","title","IconButton","onChangeSetSubCategory","subCategoryName","setSubCategory","setCategoryId","onClickAddSubCategory","subCategory","addSubCategory","onClickEditSubCategoryName","editSubCategory","onClickUpdateSubCategory","updateSubCategoryName","onClickDeleteSubCategory","deleteSubCategory","FormControl","InputLabel","Select","native","dIndex","onChangeSetSubSubCategory","subSubCategoryName","setSubSubCategory","category1","cArray","i","length","setCategoryInSubSubCategory","setSubCategoryInSubSubCategory","onClickAddSubSubCategory","subSubCategory","addSubSubCategory","onClickEditSubSubCategoryName","editSubSubCategory","onClickUpdateSubSubCategory","updateSubSubCategory","onClickDeleteSubSubCategory","deleteSubSubCategory","aria-label","filterSubCategories","filteredSubCategories","AllCategories","showTab","class1","class2","class3","switchTab","tab","active","inactive","setState","SubCategory","SubSubCategory","AddProducts","onChangeSetProductName","setProductName","onChangeSetBrandName","setBrandName","onChangeSetProductImage","image","setProductImage","onChangeSetProductDescription","productDescription","setProductDescription","onChangeSetProductCategory","categoryId","cArr","setProductCategory","onChangeSetProductSubCategory","subCategoryId","sCArr","setProductSubCategory","onChangeSetProductSubSubCategory","setProductSubSubCategory","onClickAddProduct","editProduct","updateProduct","addProduct","onClickEditProduct","onClickDeleteProduct","uProduct","deleteProduct","TextareaAutosize","rowsMin","placeholder","filters_1","filterSubSubCategories","filteredSubSubCategories","divor","Table","href","UserDashboard","UserProfile","editName","editUsername","editEmailId","editPassword","showPassword","getDerivedStateFromProps","onClickEditName","setUpdateFirstName","setUpdateMiddleName","setUpdateLastName","onClickUpdateName","userUpdate","updateUserName","onClickEditUsername","onChangeSetUpdateUsername","setUpdateUsername","onClickUpdateUsername","updateUserUsername","onClickEditEmailId","onChangeSetUpdateEmailId","setUpdateEmailId","onClickUpdateEmailId","updateUserEmailId","onClickEditPassword","onChangeSetOldPassword","oldPassword","setUpdateOldPassword","onChangeSetNewPassword","newPassword","setUpdateNewPassword","setUpdateRepeatPassword","onClickUpdatePassword","updateUserPassword","toggleShowPassword","handleMouseDownPassword","preventDefault","sm","FormGroup","Label","for","Input","row","success","FormFeedback","invalid","message","valid","htmlFor","OutlinedInput","endAdornment","InputAdornment","position","onMouseDown","edge","labelWidth","withProductPageHOC","WrappedProductPage","componentWillMount","match","params","GiveRating","ratingValue","hover","labels","0.5","1","1.5","2","2.5","3","3.5","4","4.5","5","rating","getUserRating","onChangeSetUserRatingValue","rating2","setUserRating","ratings","userRatingExists","updateUserRating","postUserRating","onChangeSetHover","Box","component","mb","borderColor","Typography","Rating","name","size","parseFloat","precision","onChangeActive","ml","ShowRating","onChangeSetRatingValue","LinearProgress","totalRatings","readOnly","avgRating","UserReview","review","getUserReview","onClickEditUserReview","editUserReview","onChangeSetUserReview","userReview","setUserReview","onClickUpdateUserReview","updateUserReview","onClickPostUserReview","postUserReview","onClickDeleteUserReview","deleteUserReview","reviews","reviewExists","editReview","createdAt","JSON","stringify","ProductReviewsList","toggleChoice","getProductReviews","toggleLikeDislike","choice","date","productReviews","description","Wrapper","exact","path","App","Boolean","window","location","hostname","categoriesState","categoriesCopy","editIndex","categoriesReducer","action","stateCopy","parse","data","push","eIndex","uIndex","updated","dId","deleted","splice","subCategoriesState","subCategoriesCopy","subCategoriesReducer","subCategory2","subSubCategoriesState","subSubCategoriesCopy","categoryToFilter","subSubCategoriesReducer","subSubCategory2","productState","6","7","8","9","10","subCategoryToFilter","productObject","productReducer","$numberDecimal","pdArray","userState","token","likedReviews","dislikedReviews","logoutRedirect","usersCopy","firstPassword","userReducer","email","validator","isEmail","set","Authorization","remove","ratingsState","ratingsCopy","editRating","ratingErrors","ratingsReducer","undefined","reviewsState","likes","dislikes","reviewsCopy","reviewsReducer","pReviews","Date","rootReducers","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.60fc2421.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass SearchBox extends Component {\r\n    render(){\r\n        return(\r\n            <div className=\"admin-dashboard\">\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBox;","import React, { Component } from \"react\";\r\nimport { Nav, NavItem } from 'reactstrap';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nclass AdminNavbar extends Component {\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Nav className=\"admin-navbar\">\r\n                    <NavItem>\r\n                        <Link to=\"/admin-dashboard\">Dashboard</Link>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <Link to=\"/all-categories\">Categories</Link>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <Link to=\"/add-products\">Products</Link>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <Link to=\"/user-profile\">Profile</Link>\r\n                    </NavItem>\r\n                </Nav>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AdminNavbar;","import axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nexport const token = Cookies.get(\"userToken\")\r\n\r\nexport var defaults = {\r\n    baseURL: \"http://localhost:5000\",\r\n    headers: {\r\n        \"Authorization\": Cookies.get(\"userToken\"),\r\n        \"Content-Type\": \"application/json\"\r\n    }\r\n} \r\n\r\nexport const api = axios.create(defaults);\r\n\r\nexport const Axios = axios.create({\r\n    baseURL: \"http://localhost:5000\",\r\n})","import { api, Axios } from \"./axiosDefaults\";\r\nimport { \r\n    Is_User_Logged_In,\r\n    Set_User_First_Name,\r\n    Set_User_Middle_Name,\r\n    Set_User_Last_Name,\r\n    Set_User_Username,\r\n    Set_User_Email_Id,\r\n    Set_First_Password,\r\n    Set_Second_Password,\r\n    Register_User,\r\n    Get_Login_Username_Or_Email_ID,\r\n    Get_Login_Password,\r\n    Set_Login_Redirect,\r\n    User_Logout } from \"./actionTypes.js\"\r\n\r\nexport const setFirstName = (firstName) =>{\r\n    return ({\r\n        type: Set_User_First_Name,\r\n        payload: firstName\r\n    })\r\n}\r\n\r\nexport const setMiddleName = (middleName) =>{\r\n    return ({\r\n        type: Set_User_Middle_Name,\r\n        payload: middleName\r\n    })\r\n}\r\n\r\nexport const setLastName = (lastName) =>{\r\n    return ({\r\n        type: Set_User_Last_Name,\r\n        payload: lastName\r\n    })\r\n}\r\n\r\nexport const setUsername = (username) =>{\r\n    return ({\r\n        type: Set_User_Username,\r\n        payload: username\r\n    })\r\n}\r\n\r\nexport const setEmailId = (emailId) =>{\r\n    return ({\r\n        type: Set_User_Email_Id,\r\n        payload: emailId\r\n    })\r\n}\r\n\r\nexport const setPassword = (password) =>{\r\n    return ({\r\n        type: Set_First_Password,\r\n        payload: password\r\n    })\r\n}\r\n\r\nexport const setRepeatPassword = (repeatPassword) =>{\r\n    return ({\r\n        type: Set_Second_Password,\r\n        payload: repeatPassword\r\n    })\r\n}\r\n\r\nexport const registerUser = (user) => async dispatch => {\r\n    let res = await Axios.post(`/users/user-registration`,user)\r\n    dispatch({\r\n        type: Register_User,\r\n        payload: res\r\n    })\r\n}\r\n\r\nexport const getUsernameOrEmailId = (usernameOrEmail) => {\r\n    return ({\r\n        type: Get_Login_Username_Or_Email_ID,\r\n        payload: usernameOrEmail\r\n    })\r\n}\r\n\r\nexport const getPassword = (password) => {\r\n    return ({\r\n        type: Get_Login_Password,\r\n        payload: password\r\n    })\r\n}\r\n\r\nexport const userLogin = (loginDetails) => async dispatch => {\r\n    await Axios.post(\"/users/user-login\",loginDetails)\r\n    .then((res)=>{\r\n        \r\n        dispatch({\r\n        type: Set_Login_Redirect,\r\n        payload: res\r\n    })}).catch((err)=> {return err})\r\n    \r\n}\r\n\r\nexport const isUserLoggedIn = () => async (dispatch) => {\r\n    try{\r\n        const res = await api.get(`/users/is-user-logged-in`)\r\n        return await dispatch({\r\n            type: Is_User_Logged_In,\r\n            payload: res\r\n        })  \r\n    } catch (err) {\r\n        return err\r\n    }\r\n}\r\n\r\nexport const setUserLogout = (user) => async dispatch => {\r\n    let res\r\n    if (user.userIsAdmin === true){\r\n        res = await api.patch(`/admins/admin-logout`, user)\r\n    } else {\r\n        res = await api.patch(`/users/user-logout`, user)\r\n    }\r\n    return await dispatch({\r\n        type: User_Logout,\r\n        payload: res\r\n    })\r\n}","\r\n//| User Action Types\r\n\r\nexport const Is_User_Logged_In = \"Is_User_Logged_In\";\r\nexport const User_Logged_In = \"User_Logged_In\";\r\nexport const User_Logout = \"User_Logout\";\r\nexport const User_Registration = \"User_Registration\";\r\nexport const Set_User_First_Name = \"Set_User_First_Name\";\r\nexport const Set_User_Middle_Name = \"Set_User_Middle_Name\";\r\nexport const Set_User_Last_Name = \"Set_User_Last_Name\";\r\nexport const Set_User_Username = \"Set_User_Username\";\r\nexport const Set_User_Email_Id = \"Set_User_EmailId\";\r\nexport const Set_User_Password = \"Set_User_Password\";\r\nexport const Register_User = \"Register_User\";\r\nexport const Set_First_Password = \"Set_First_Password\";\r\nexport const Set_Second_Password = \"Set_Second_Password\";\r\nexport const Get_Login_Username_Or_Email_ID = \"Get_Login_Username_Or_Email_ID\";\r\nexport const Get_Login_Password = \"Get_Login_Password\";\r\nexport const Set_Login_Redirect = \"Set_Login_Redirect\";\r\n\r\n//* Profile Update actions\r\nexport const Set_User_Update = \"Set_User_Update\";\r\nexport const Set_Update_First_Name = \"Set_Update_First_Name\";\r\nexport const Set_Update_Middle_Name = \"Set_Update_Middle_Name\";\r\nexport const Set_Update_Last_Name = \"Set_Update_Last_Name\";\r\nexport const Set_Update_Username = \"Set_Update_Username\";\r\nexport const Set_Update_Email_Id = \"Set_Update_Email_Id\";\r\nexport const Set_Update_Old_Password = \"Set_Update_Old_Password\";\r\nexport const Set_Update_New_Password = \"Set_Update_New_Password\";\r\nexport const Set_Update_Repeat_Password = \"Set_Update_Repeat_Password\";\r\nexport const Update_User_Name = \"Update_User_Name\";\r\nexport const Update_User_Username = \"Update_User_Username\";\r\nexport const Update_User_Email_Id = \"Update_User_Email_Id\";\r\nexport const Update_User_Password = \"Update_User_Password\";\r\n\r\n//| Categories Action Types\r\n\r\n// Categories\r\nexport const Get_All_Categories = \"Get_All_Categories\";\r\nexport const Set_Category_Name = \"Set_Category_Name\";\r\nexport const Add_Category_Name = \"Add_Category_Name\";\r\nexport const Update_Category_Name = \"Update_Category_Name\";\r\nexport const Delete_Category = \"Delete_Category\";\r\nexport const Edit_Category = \"Edit_Category\";\r\n\r\n// Sub-Categories\r\nexport const Get_All_Sub_Categories = \"Get_All_Sub_Categories\";\r\nexport const Set_Sub_Category_Name = \"Set_Sub_Category_Name\";\r\nexport const Add_Sub_Category_Name = \"Add_Sub_Category_Name\";\r\nexport const Update_Sub_Category_Name = \"Update_Sub_Category_Name\";\r\nexport const Delete_Sub_Category = \"Delete_Sub_Category\";\r\nexport const Edit_Sub_Category = \"Edit_Sub_Category\";\r\nexport const Set_Category_In_Sub_Category = \"Set_Category_In_Sub_Category\";\r\n// Sub-Sub-Categories\r\nexport const Get_All_Sub_Sub_Categories = \"Get_All_Sub_Sub_Categories\";\r\nexport const Set_Sub_Sub_Category_Name = \"Set_Sub_Sub_Category_Name\";\r\nexport const Add_Sub_Sub_Category_Name = \"Add_Sub_Sub_Category_Name\";\r\nexport const Update_Sub_Sub_Category = \"Update_Sub_Sub_Category\";\r\nexport const Delete_Sub_Sub_Category = \"Delete_Sub_Sub_Category\";\r\nexport const Edit_Sub_Sub_Category = \"Edit_Sub_Sub_Category\";\r\nexport const Set_Category_In_Sub_Sub_Category = \"Set_Category_In_Sub_Sub_Category\";\r\nexport const Set_Sub_Category_In_Sub_Sub_Category = \"Set_Sub_Category_In_Sub_Sub_Category\";\r\n\r\n//| Product Action types\r\n\r\nexport const Get_All_Products = \"Get_All_Products\";\r\nexport const Get_Product = \"Get_Product\";\r\nexport const Set_Product_Name = \"Set_Product_Name\";\r\nexport const Set_Brand_Name = \"Set_Brand_Name\";\r\nexport const Set_Product_Image = \"Set_Product_Image\";\r\nexport const Set_Product_Description = \"Set_Product_Description\";\r\nexport const Set_Product_Category = \"Set_Product_Category\";\r\nexport const Set_Product_Sub_Category = \"Set_Product_Sub_Category\";\r\nexport const Set_Product_Sub_Sub_Category = \"Set_Product_Sub_Sub_Category\";\r\nexport const Add_Product = \"Add_Product\";\r\nexport const Edit_Product = \"Edit_Product\";\r\nexport const Delete_Product = \"Delete_Product\";\r\nexport const Update_Product = \"Update_Product\";\r\nexport const Send_Product_Id = \"Send_Product_Id\";\r\n\r\n//| Ratings Action Types\r\n\r\nexport const Get_User_Rating = \"Get_User_Rating\";\r\nexport const Edit_User_Review = \"Edit_User_Review\";\r\nexport const Set_User_Rating = \"Set_User_Rating\";\r\nexport const Post_User_Rating = \"Post_User_Rating\";\r\nexport const Update_User_Rating = \"Update_User_Rating\";\r\nexport const Get_Product_Reviews = \"Get_Product_Reviews\";\r\n\r\n//| Reviews Action Types\r\n\r\nexport const Set_User_Review = \"Set_User_Review\";\r\nexport const Get_User_Review = \"Get_User_Review\";\r\nexport const Post_User_Review = \"Post_User_Review\";\r\nexport const Update_User_Review = \"Update_User_Review\";\r\nexport const Delete_User_Review = \"Delete_User_Review\";\r\n\r\n//| Admin Action Types\r\n\r\nexport const Get_User_Info = \"Get_Admin_Info\";","import { api } from \"./axiosDefaults\";\r\nimport { Get_User_Info,\r\n    Set_User_Update,\r\n    Set_Update_First_Name,\r\n    Set_Update_Middle_Name,\r\n    Set_Update_Last_Name,\r\n    Set_Update_Username,\r\n    Set_Update_Email_Id,\r\n    Set_Update_Old_Password,\r\n    Set_Update_New_Password,\r\n    Set_Update_Repeat_Password,\r\n    Update_User_Name,\r\n    Update_User_Username,\r\n    Update_User_Email_Id,\r\n    Update_User_Password } from \"./actionTypes\";\r\n\r\nexport const getUserInfo = (userIsAdmin) => async (dispatch) => {\r\n    if (userIsAdmin === true) {\r\n        let res = await api.get(\"/admins/get-admin-info\");\r\n        return dispatch({\r\n            type: Get_User_Info,\r\n            payload: res\r\n        })\r\n    } else {\r\n        let res = await api.get(\"/users/get-user-info\");\r\n        return dispatch({\r\n            type: Get_User_Info,\r\n            payload: res\r\n        })\r\n    }\r\n}\r\n\r\nexport const setUserUpdate = () => {\r\n    return ({\r\n        type: Set_User_Update\r\n    })\r\n}\r\n\r\nexport const setUpdateFirstName = (firstName) => {\r\n    return ({\r\n        type: Set_Update_First_Name,\r\n        payload: firstName\r\n    })\r\n}\r\n\r\nexport const setUpdateMiddleName = (middleName) => {\r\n    return ({\r\n        type: Set_Update_Middle_Name,\r\n        payload: middleName\r\n    })\r\n}\r\n\r\nexport const setUpdateLastName = (lastName) => {\r\n    return ({\r\n        type: Set_Update_Last_Name,\r\n        payload: lastName\r\n    })\r\n}\r\n\r\nexport const setUpdateUsername = (username) => {\r\n    return ({\r\n        type: Set_Update_Username,\r\n        payload: username\r\n    })\r\n}\r\n\r\nexport const setUpdateEmailId = (emailId) => {\r\n    return ({\r\n        type: Set_Update_Email_Id,\r\n        payload: emailId\r\n    })\r\n}\r\n\r\nexport const setUpdateOldPassword = (oldPassword) => {\r\n    return ({\r\n        type: Set_Update_Old_Password,\r\n        payload: oldPassword\r\n    })\r\n}\r\n\r\nexport const setUpdateNewPassword = (newPassword) => {\r\n    return ({\r\n        type: Set_Update_New_Password,\r\n        payload: newPassword\r\n    })\r\n}\r\n\r\nexport const setUpdateRepeatPassword = (repeatPassword) => {\r\n    return ({\r\n        type: Set_Update_Repeat_Password,\r\n        payload: repeatPassword\r\n    })\r\n}\r\n\r\nexport const updateUserName = (user) => async (dispatch) => {\r\n    if (user.userIsAdmin === true) {\r\n        let res = await api.patch(\"/admins/update-admin-name\", user)\r\n        return await dispatch({\r\n            type: Update_User_Name,\r\n            payload: res\r\n        })\r\n    } else {\r\n        let res = await api.patch(\"/users/update-user-name\", user)\r\n        return await dispatch({\r\n            type: Update_User_Name,\r\n            payload: res\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUserUsername = (user) => async (dispatch) => {\r\n    if (user.userIsAdmin === true) {\r\n        let res = await api.patch(\"/admins/update-admin-username\", user)\r\n        return await dispatch({\r\n            type: Update_User_Username,\r\n            payload: res\r\n        })\r\n    } else {\r\n        let res = await api.patch(\"/users/update-user-username\", user)\r\n        return await dispatch({\r\n            type: Update_User_Username,\r\n            payload: res\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUserEmailId = (user) => async (dispatch) => {\r\n    if (user.userIsAdmin === true) {\r\n        let res = await api.patch(\"/admins/update-admin-email\", user)\r\n        return await dispatch({\r\n            type: Update_User_Email_Id,\r\n            payload: res\r\n        })\r\n    } else {\r\n        let res = await api.patch(\"/users/update-user-email\", user)\r\n        return await dispatch({\r\n            type: Update_User_Email_Id,\r\n            payload: res\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUserPassword = (user) => async (dispatch) => {\r\n    if (user.userIsAdmin === true) {\r\n        let res = await api.patch(\"/admins/update-admin-password\", user)\r\n        return await dispatch({\r\n            type: Update_User_Password,\r\n            payload: res\r\n        })\r\n    } else {\r\n        let res = await api.patch(\"/users/update-user-password\", user)\r\n        return await dispatch({\r\n            type: Update_User_Password,\r\n            payload: res\r\n        })\r\n    }\r\n}","import { \r\n    Get_All_Products,\r\n    Get_Product,\r\n    Set_Product_Name, \r\n    Set_Brand_Name,\r\n    Set_Product_Image,\r\n    Set_Product_Description, \r\n    Set_Product_Category, \r\n    Set_Product_Sub_Category, \r\n    Set_Product_Sub_Sub_Category, \r\n    Add_Product,\r\n    Edit_Product,\r\n    Delete_Product,\r\n    Update_Product,\r\n    Send_Product_Id } from \"./actionTypes\"\r\nimport { api, Axios } from \"./axiosDefaults\"\r\n\r\n\r\nexport const getAllProducts = () => async (dispatch) => {\r\n    let res = await Axios.get(\"/products\")\r\n    dispatch({\r\n        type: Get_All_Products,\r\n        payload: res\r\n    })\r\n}\r\n\r\nexport const getProduct = (product) => async (dispatch) => {\r\n    let res = await Axios.patch(\"/products/get-product\", product)\r\n    dispatch({\r\n        type: Get_Product,\r\n        payload: res\r\n    })\r\n\r\n}\r\n\r\nexport const setProductName = (productName) => {\r\n    return ({\r\n        type: Set_Product_Name,\r\n        payload: productName\r\n    })\r\n}\r\n\r\nexport const setBrandName = (brandName) => {\r\n    return ({\r\n        type: Set_Brand_Name,\r\n        payload: brandName\r\n    })\r\n}\r\n\r\nexport const setProductImage = (image) => {\r\n    return ({\r\n        type: Set_Product_Image,\r\n        payload: image\r\n    })\r\n}\r\n\r\nexport const setProductDescription = (productDescription) => {\r\n    return ({\r\n        type: Set_Product_Description,\r\n        payload: productDescription\r\n    })\r\n}\r\n\r\nexport const setProductCategory = (category) => {\r\n    return ({\r\n        type: Set_Product_Category,\r\n        payload: category\r\n    })\r\n}\r\n\r\nexport const setProductSubCategory = (subCategory) => {\r\n    return ({\r\n        type: Set_Product_Sub_Category,\r\n        payload: subCategory\r\n    })\r\n}\r\n\r\nexport const setProductSubSubCategory = (subSubCategory) => {\r\n    return ({\r\n        type: Set_Product_Sub_Sub_Category,\r\n        payload: subSubCategory\r\n    })\r\n}\r\n\r\nexport const addProduct = (product) => async (dispatch) => {\r\n    let res = await api.post(\"/products\", product)\r\n    dispatch({\r\n        type: Add_Product,\r\n        payload: res\r\n    });\r\n}\r\n\r\nexport const editProduct = (index) => (dispatch) => {\r\n    dispatch({\r\n        type: Edit_Product,\r\n        payload: index\r\n    });\r\n}\r\n\r\nexport const updateProduct = (product) => async (dispatch) => {\r\n    let res = await api.patch(\"/products/update-product\", product);\r\n    dispatch({\r\n        type: Update_Product,\r\n        payload: res\r\n    });\r\n}\r\n\r\nexport const deleteProduct = (product) => async (dispatch) => {\r\n    let res = await api.patch(\"/products/delete-product\", product)\r\n    dispatch({\r\n        type: Delete_Product,\r\n        payload: res\r\n    });\r\n    return res;\r\n}\r\n\r\nexport const sendProductId = (_id) => async (dispatch) => {\r\n    console.log(_id)\r\n    dispatch({\r\n        type: Send_Product_Id,\r\n        payload: _id\r\n    })\r\n}","import { Set_Category_Name, Add_Category_Name, Get_All_Categories, Update_Category_Name, Delete_Category, Edit_Category} from \"./actionTypes\";\r\nimport { api, Axios } from \"./axiosDefaults\";\r\n\r\nexport const getAllCategories = (admin) => async (dispatch) => {\r\n    let res = await Axios.get(`/categories`, admin)\r\n    dispatch({\r\n        type: Get_All_Categories,\r\n        payload: res\r\n    });\r\n};\r\n\r\nexport const setCategory =(categoryName) => {\r\n    return {\r\n        type: Set_Category_Name,\r\n        payload: categoryName\r\n    }\r\n}\r\n\r\nexport const addCategory = (category) => async (dispatch) => {\r\n    let res = await api.post(`/categories`, category)\r\n    dispatch({\r\n        type: Add_Category_Name,\r\n        payload: res\r\n    })\r\n}\r\n\r\nexport const editCategory = (index) => async (dispatch) => {\r\n    dispatch({\r\n        type: Edit_Category,\r\n        payload: index\r\n    })\r\n}\r\n\r\nexport const updateCategoryName = (category) => async (dispatch) => {\r\n    let res = await api.patch(\"/categories/update-category-name\", category);\r\n    dispatch({\r\n        type: Update_Category_Name,\r\n        payload: res\r\n    })\r\n}\r\n\r\nexport const deleteCategory = (category) => async (dispatch) => {\r\n    let res = await api.patch(\"/categories/delete-category\", category);\r\n    dispatch({\r\n        type: Delete_Category,\r\n        payload: res\r\n    })\r\n}","import { Set_Sub_Category_Name, Set_Category_In_Sub_Category, Add_Sub_Category_Name, Get_All_Sub_Categories, Update_Sub_Category_Name, Delete_Sub_Category, Edit_Sub_Category } from \"./actionTypes\";\r\nimport { api, Axios } from \"./axiosDefaults\";\r\n\r\n\r\nexport const getAllSubCategories = (admin) => async (dispatch) => {\r\n    let res = await Axios.get(`/sub-categories`, admin)\r\n    dispatch({\r\n        type: Get_All_Sub_Categories,\r\n        payload: res\r\n    });\r\n}\r\n\r\nexport const setSubCategory =(subCategoryName) => {\r\n    return {\r\n        type: Set_Sub_Category_Name,\r\n        payload: subCategoryName\r\n    }\r\n}\r\n\r\nexport const setCategoryId =(category) => {\r\n    return {\r\n        type: Set_Category_In_Sub_Category,\r\n        payload: category\r\n    }\r\n}\r\n\r\nexport const editSubCategory = (index) => async (dispatch) => {\r\n    dispatch({\r\n        type: Edit_Sub_Category,\r\n        payload: index\r\n    })\r\n}\r\n\r\nexport const addSubCategory =(subCategory) => async (dispatch) => {\r\n    let res = await api.post(`/sub-categories`,subCategory)\r\n    dispatch({\r\n        type: Add_Sub_Category_Name,\r\n        payload: res\r\n    })\r\n}\r\n\r\nexport const updateSubCategoryName = (subCategory) => async (dispatch) => {\r\n    let res = await api.patch(\"/sub-categories/update-sub-category-name\", subCategory)\r\n    dispatch({\r\n        type: Update_Sub_Category_Name,\r\n        payload: res\r\n    })\r\n}\r\n\r\nexport const deleteSubCategory = (subCategory, index) => async (dispatch) => {\r\n    let res = await api.patch(\"/sub-categories/delete-sub-category\", subCategory);\r\n    dispatch({\r\n        type: Delete_Sub_Category,\r\n        payload: res,\r\n        dIndex: index\r\n    })\r\n}","import { api, Axios } from \"./axiosDefaults\";\r\nimport { Set_Sub_Sub_Category_Name,\r\n    Set_Category_In_Sub_Sub_Category,\r\n    Set_Sub_Category_In_Sub_Sub_Category,\r\n    Add_Sub_Sub_Category_Name,\r\n    Get_All_Sub_Sub_Categories,\r\n    Update_Sub_Sub_Category,\r\n    Delete_Sub_Sub_Category,\r\n    Edit_Sub_Sub_Category } from \"./actionTypes\";\r\n\r\n\r\nexport const getAllSubSubCategories = (admin) => async (dispatch) => {\r\n    let res = await Axios.get(`/sub-sub-categories`, admin)\r\n    dispatch({\r\n        type: Get_All_Sub_Sub_Categories,\r\n        payload: res\r\n    });\r\n} \r\n\r\nexport const setSubSubCategory =(subSubCategoryName) => {\r\n    return {\r\n        type: Set_Sub_Sub_Category_Name,\r\n        payload: subSubCategoryName\r\n    }\r\n}\r\n\r\nexport const setCategoryInSubSubCategory =(category) => {\r\n    console.log(category);\r\n    return {\r\n        type: Set_Category_In_Sub_Sub_Category,\r\n        payload: category\r\n    }\r\n}\r\n\r\nexport const setSubCategoryInSubSubCategory =(subCategory) => {\r\n    return {\r\n        type: Set_Sub_Category_In_Sub_Sub_Category,\r\n        payload: subCategory\r\n    }\r\n}\r\n\r\nexport const addSubSubCategory =(subSubCategory) => async (dispatch) => {\r\n    let res = await api.post(`/sub-sub-categories`, subSubCategory)\r\n    dispatch({\r\n        type: Add_Sub_Sub_Category_Name,\r\n        payload: res\r\n    })\r\n}\r\n\r\nexport const editSubSubCategory = (index) => async (dispatch) => {\r\n    dispatch({\r\n        type: Edit_Sub_Sub_Category,\r\n        payload: index\r\n    })\r\n}\r\n\r\nexport const updateSubSubCategory = (subSubCategory) => async (dispatch) => {\r\n    let res = await api.patch(\"/sub-sub-categories/update-sub-sub-category-name\", subSubCategory)\r\n    dispatch({\r\n        type: Update_Sub_Sub_Category,\r\n        payload: res\r\n    })\r\n}\r\n\r\nexport const deleteSubSubCategory = (subSubCategory, index) => async (dispatch) => {\r\n    let res = await api.patch(\"/sub-sub-categories/delete-sub-sub-category\", subSubCategory)\r\n    dispatch({\r\n        type: Delete_Sub_Sub_Category,\r\n        payload: res,\r\n        dIndex: index\r\n    })\r\n    return res\r\n}","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from \"react-router-dom\";\r\nimport SearchBox from \"../searchBox\";\r\nimport { Navbar, Nav, NavItem } from \"reactstrap\";\r\nimport AdminNavbar from \"./adminNavbar\";\r\nimport { isUserLoggedIn, setUserLogout } from \"../../Redux/Actions/userActions\";\r\nimport { setUserUpdate, getUserInfo } from \"../../Redux/Actions/userProfileActions\";\r\nimport { getAllProducts } from \"../../Redux/Actions/productActions\";\r\nimport { getAllCategories } from \"../../Redux/Actions/categoriesActions\";\r\nimport { getAllSubCategories } from \"../../Redux/Actions/subCategoriesActions\";\r\nimport { getAllSubSubCategories } from \"../../Redux/Actions/subSubCategoriesActions\";\r\n\r\n\r\nclass Header extends Component {\r\n\r\n    componentDidMount = () => {\r\n        let user = {\r\n            user: this.props.user,\r\n            userIsAdmin: this.props.loginStatus.userIsAdmin,\r\n        }\r\n        let admin = {\r\n            emailId: this.props.loginStatus.emailId,\r\n            headers: this.props.headers\r\n        }\r\n        this.props.getAllCategories(admin);\r\n        this.props.getAllSubCategories(admin);\r\n        this.props.getAllSubSubCategories(admin);\r\n        this.props.getAllProducts()\r\n        this.props.isUserLoggedIn();\r\n        if (this.props.loginStatus.loggedIn === true){\r\n            this.props.setTokenInUser(user)\r\n        }\r\n    }\r\n\r\n    onClickSetUserLogout = () => {\r\n        let user = {\r\n            user: this.props.user,\r\n            userIsAdmin: this.props.loginStatus.userIsAdmin,\r\n            headers: this.props.headers\r\n        }\r\n        this.props.setUserLogout(user)\r\n    }\r\n\r\n    render(){\r\n        // console.log(\"Props in header =>\" + JSON.stringify(this.props))\r\n        return(\r\n            <div className=\"header\">\r\n                <Link to=\"/\"><h1>Ratings and Reviews</h1></Link>\r\n                <Navbar>\r\n                    <Nav>\r\n                    <div className=\"header-navbar\">\r\n                    <div className=\"header-Home\">\r\n                        <NavItem>\r\n                            <Link to=\"/\">Home</Link>\r\n                        </NavItem>\r\n                    </div>\r\n                    <div>\r\n                        <NavItem>\r\n                            <Link to=\"/search-box\">\r\n                                <SearchBox></SearchBox>\r\n                            </Link>\r\n                        </NavItem>\r\n                    </div>\r\n                    <div className=\"user-login-logout\">\r\n                        {this.props.loginStatus.loggedIn === false && \r\n                            <div className=\"login-link\">\r\n                            <NavItem>\r\n                            <Link to=\"/user-login\">Login</Link>\r\n                            </NavItem>\r\n                            </div>}\r\n                        {this.props.loginStatus.loggedIn === false && \r\n                            <div className=\"register-link\">\r\n                            <NavItem>\r\n                            <Link to=\"/user-registration\">Register</Link>\r\n                            </NavItem>\r\n                            </div>}\r\n                        {this.props.loginStatus.loggedIn === true && \r\n                            <div className=\"user-account-link\">\r\n                            <NavItem>\r\n                            <Link to=\"/user-account\">User</Link>\r\n                            </NavItem>\r\n                            </div>}\r\n                        {this.props.loginStatus.loggedIn === true && \r\n                            <div className=\"logout-link\">\r\n                            <NavItem>\r\n                            <Link onClick={()=>{this.onClickSetUserLogout()}} to=\"/\">Logout</Link>\r\n                            </NavItem>\r\n                            </div>}\r\n                    </div>\r\n                    </div>\r\n                    </Nav>\r\n                </Navbar>\r\n                \r\n                {this.props.loginStatus.userIsAdmin === true && <AdminNavbar></AdminNavbar>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nHeader.propTypes = {\r\n    loginStatus: PropTypes.object.isRequired,\r\n    user: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired,\r\n    categories: PropTypes.object.isRequired,\r\n    subCategories: PropTypes.object.isRequired,\r\n    headers: PropTypes.object.isRequired,\r\n    subSubCategories: PropTypes.object.isRequired,\r\n    isUserLoggedIn: PropTypes.func.isRequired,\r\n    setUserLogout: PropTypes.func.isRequired,\r\n    setUserUpdate: PropTypes.func.isRequired,\r\n    getUserInfo: PropTypes.func.isRequired,\r\n    getAllProducts: PropTypes.func.isRequired,\r\n    getAllCategories: PropTypes.func.isRequired,\r\n    getAllSubCategories: PropTypes.func.isRequired,\r\n    getAllSubSubCategories: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.users.user,\r\n        errors: state.users.errors,\r\n        loginStatus: state.users.loginStatus,\r\n        categories: state.categories,\r\n        subCategories: state.subCategories,\r\n        subSubCategories: state.subSubCategories,\r\n        headers: state.users.headers,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps,{ isUserLoggedIn,\r\n    setUserLogout,\r\n    setUserUpdate,\r\n    getUserInfo,\r\n    getAllProducts,\r\n    getAllCategories,\r\n    getAllSubCategories,\r\n    getAllSubSubCategories })(Header);","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\"\r\nimport {\r\n    Card, CardImg, CardText, CardBody,\r\n    CardTitle, CardSubtitle, Button\r\n  } from 'reactstrap';\r\nimport withProductWrapper from \"./withProductWrapper\";\r\n\r\n\r\nclass Product extends Component {\r\n\r\n\r\n    render () {\r\n        return (\r\n            <Link to={`/product-page/${this.props.product._id}`}>\r\n            <Card className=\"product-container\">\r\n                <CardImg top width=\"100%\" src={this.props.product.images[0]} alt={this.props.product.productName} />\r\n                <CardBody>\r\n                <CardTitle>{this.props.product.productName}</CardTitle>\r\n                <CardSubtitle>{this.props.product.brandName}</CardSubtitle>\r\n                <CardText></CardText>\r\n                <Button>Button</Button>\r\n                </CardBody>\r\n            </Card>\r\n            </Link>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst WrappedProduct = withProductWrapper(Product);\r\n\r\nexport default WrappedProduct;","import React, { Component } from \"react\";\r\n\r\n\r\nconst withProductWrapper = WrappedProduct => {\r\n\r\n    class withProductWrapper extends Component {\r\n\r\n        \r\n\r\n        render () {\r\n            return (\r\n                <div className=\"products-wrapper\">\r\n                    {this.props.products.map((product, index)=>{\r\n                        return(\r\n                            \r\n                            <WrappedProduct product={product} key={index}></WrappedProduct>\r\n                            \r\n                        )\r\n                    })}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    return withProductWrapper;\r\n\r\n}\r\n\r\nexport default withProductWrapper;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport WrappedProduct from \"./WrappedProduct\";\r\n\r\n\r\nclass Products extends Component {\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"products-container\">\r\n                <WrappedProduct products={this.props.products}></WrappedProduct>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.users.user,\r\n        errors: state.users.inputErrors,\r\n        loginStatus: state.users.loginStatus.registrationRedirect,\r\n        products: state.products.products,\r\n        categories: state.categories,\r\n        subCategories: state.subCategories,\r\n        subSubCategories: state.subSubCategories\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        dispatch: dispatch\r\n    }\r\n}\r\n\r\n  export default connect(mapStateToProps, mapDispatchToProps)(Products);","import React, { Component } from \"react\";\r\nimport Products from \"./Products/products\"\r\n\r\nclass HomePage extends Component {\r\n    render(){\r\n        return(\r\n            <div className=\"home-page\">\r\n                <div className=\"product-list-container\">\r\n                    <Products></Products>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HomePage;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Link } from \"react-router-dom\"\r\nimport { getUsernameOrEmailId, getPassword, userLogin } from \"../../Redux/Actions/userActions\";\r\n\r\nclass UserLogin extends Component {\r\n\r\n    onChangeGetUsernameOrEmailId = (usernameOrEmail) => {\r\n        this.props.getUsernameOrEmailId(usernameOrEmail)\r\n    }\r\n\r\n    onChangeGetPassword = (password) => {\r\n        this.props.getPassword(password)\r\n    }\r\n    \r\n    onClickUserLogin = () => {        \r\n        this.props.userLogin(this.props.loginDetails);\r\n    }\r\n\r\n    render(){\r\n        \r\n        return(\r\n            <div className=\"user-login-container\">\r\n                <div className=\"user-login\">\r\n                    <TextField onChange={(e)=>{this.onChangeGetUsernameOrEmailId(e.target.value)}} type=\"text\" id=\"outlined-required\" label=\"Username or Email Id\" variant=\"outlined\" />\r\n                    <TextField onChange={(e)=>{this.onChangeGetPassword(e.target.value)}} type=\"password\" autoComplete=\"current-password\" id=\"outlined-password-input\" label=\"Password\" variant=\"outlined\" />\r\n                    <Link to={this.props.loginStatus.loginRedirect}>\r\n                        <Button onClick={()=>{this.onClickUserLogin()}} variant=\"contained\" color=\"primary\">\r\n                            Login\r\n                        </Button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nUserLogin.propTypes = {\r\n    user: PropTypes.object.isRequired,\r\n    loginDetails: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired,\r\n    loginStatus: PropTypes.object.isRequired,\r\n    headers: PropTypes.object.isRequired,\r\n    getUsernameOrEmailId: PropTypes.func.isRequired,\r\n    getPassword: PropTypes.func.isRequired,\r\n    userLogin: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n     return {\r\n        user: state.users.user,\r\n        loginDetails: state.users.loginDetails,\r\n        errors: state.users.inputErrors,\r\n        loginStatus: state.users.loginStatus,\r\n        headers: state.users.headers\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, { getUsernameOrEmailId, getPassword, userLogin })(UserLogin);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { setFirstName,\r\n    setMiddleName,\r\n    setLastName,\r\n    setUsername,\r\n    setEmailId,\r\n    setPassword,\r\n    setRepeatPassword,\r\n    registerUser } from \"../../Redux/Actions/userActions\";\r\n\r\nclass UserRegistraion extends Component {\r\n\r\n    onChangeSetFirstName = (firstName) =>{\r\n        this.props.setFirstName(firstName)\r\n    }\r\n    \r\n    onChangeSetMiddleName = (middleName) =>{\r\n        this.props.setMiddleName(middleName)\r\n    }\r\n    \r\n    onChangeSetLastName = (lastName) =>{\r\n        this.props.setLastName(lastName)\r\n    }\r\n    \r\n    onChangeSetUsername = (username) =>{\r\n        this.props.setUsername(username)\r\n    }\r\n    \r\n    onChangeSetEmailId = (emailId) =>{\r\n        this.props.setEmailId(emailId)\r\n    }\r\n    \r\n    onChangeSetPassword = (password) =>{\r\n        this.props.setPassword(password)\r\n    }\r\n    \r\n    onChangeSetRepeatPassword = (repeatPassword) =>{\r\n        this.props.setRepeatPassword(repeatPassword)\r\n    }\r\n\r\n    onClickRegisterUser = () => {\r\n        this.props.registerUser(this.props.user)\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n        console.log(this.props.user)\r\n        return(\r\n            \r\n            <div className=\"user-registration-container\">\r\n                <div className=\"user-registration\">\r\n                    <TextField type=\"text\" onChange={(e)=>{this.onChangeSetFirstName(e.target.value)}} label=\"First Name\" variant=\"outlined\" />\r\n                    <TextField type=\"text\" onChange={(e)=>{this.onChangeSetMiddleName(e.target.value)}} label=\"Middle Name\" variant=\"outlined\" />\r\n                    <TextField type=\"text\" onChange={(e)=>{this.onChangeSetLastName(e.target.value)}} label=\"Last Name\" variant=\"outlined\" />\r\n                    <div></div>\r\n                    <TextField type=\"text\" onChange={(e)=>{this.onChangeSetUsername(e.target.value)}} label=\"Username\" variant=\"outlined\" />\r\n                    <TextField type=\"text\" onChange={(e)=>{this.onChangeSetEmailId(e.target.value)}} label=\"Email Id\" variant=\"outlined\" />\r\n                    <TextField type=\"password\" onChange={(e)=>{this.onChangeSetPassword(e.target.value)}} autoComplete=\"current-password\" label=\"Password\" variant=\"outlined\" />\r\n                    <TextField type=\"password\" onChange={(e)=>{this.onChangeSetRepeatPassword(e.target.value)}} autoComplete=\"current-password\" label=\"Repeat Password\" variant=\"outlined\" />\r\n                    <div></div>\r\n                    <Link to={this.props.loginStatus.registrationRedirect}>\r\n                        <Button onClick={()=>{this.onClickRegisterUser()}} variant=\"contained\" color=\"primary\">\r\n                            Register\r\n                        </Button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nUserRegistraion.propTypes = {\r\n    user: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired,\r\n    loginStatus: PropTypes.object.isRequired,\r\n    setFirstName: PropTypes.func.isRequired,\r\n    setMiddleName: PropTypes.func.isRequired,\r\n    setLastName: PropTypes.func.isRequired,\r\n    setUsername: PropTypes.func.isRequired,\r\n    setEmailId: PropTypes.func.isRequired,\r\n    setPassword: PropTypes.func.isRequired,\r\n    setRepeatPassword: PropTypes.func.isRequired,\r\n    registerUser: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.users.user,\r\n        errors: state.users.inputErrors,\r\n        loginStatus: state.users.loginStatus.registrationRedirect\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, { setFirstName,\r\n    setMiddleName,\r\n    setLastName,\r\n    setUsername,\r\n    setEmailId,\r\n    setPassword,\r\n    setRepeatPassword,\r\n    registerUser })(UserRegistraion);","import { api } from \"./axiosDefaults\";\r\nimport { Get_User_Info } from \"./actionTypes\";\r\n\r\nexport const getAdminInfo = () => async (dispatch) => {\r\n    let res = await api.get(\"/admins/get-admin-info\");\r\n    dispatch({\r\n        type: Get_User_Info,\r\n        payload: res\r\n    })\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getAdminInfo } from \"../../Redux/Actions/adminActions\";\r\n\r\nclass AdminDashboard extends Component {\r\n\r\n    componentDidMount = () => {\r\n        this.props.getAdminInfo()\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <div className=\"admin-dashboard\">\r\n                This Is Admin Dashboard\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nAdminDashboard.propTypes = {\r\n    getAdminInfo: PropTypes.func.isRequired,\r\n    user: PropTypes.object.isRequired,\r\n    loginStatus: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.users.user,\r\n        errors: state.users.inputErrors,\r\n        loginStatus: state.users.loginStatus,\r\n        categories: state.categories,\r\n        subCategories: state.subCategories,\r\n        subSubCategories: state.subSubCategories,\r\n        products: state.products\r\n    };\r\n}\r\n\r\n  export default connect(mapStateToProps, { getAdminInfo })(AdminDashboard);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Container, Row, Col } from \"reactstrap\";\r\nimport { getAdminInfo } from \"../../Redux/Actions/adminActions\";\r\n\r\nclass AdminProfile extends Component {\r\n    \r\n    componentDidMount = () => {\r\n        this.props.getAdminInfo()\r\n    }\r\n\r\n    render(){   \r\n        return(\r\n            <div className=\"admin-profile\">\r\n                <Container>\r\n                    <Row>\r\n                        <Col></Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nAdminProfile.propTypes = {\r\n    getAdminInfo: PropTypes.func.isRequired,\r\n    user: PropTypes.object.isRequired,\r\n    loginStatus: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.users.user,\r\n        loginStatus: state.users.loginStatus,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { getAdminInfo })(AdminProfile);","import React, { Component } from \"react\";\r\nimport { Nav, NavItem } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass UserNavbar extends Component {\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Nav className=\"user-navbar\">\r\n                    <NavItem>\r\n                        <Link to=\"/user-dashboard\">Dashboard</Link>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <Link to=\"/user-profile\">Profile</Link>\r\n                    </NavItem>\r\n                </Nav>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserNavbar;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\"\r\nimport PropTypes from \"prop-types\";\r\nimport UserNavbar from \"../Navbars/userNavbar\";\r\n\r\n\r\n\r\nclass UserAccount extends Component {\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"user-account\">\r\n            {this.props.loginStatus.userIsAdmin === false && this.props.loginStatus.loggedIn === true && <UserNavbar></UserNavbar>}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nUserAccount.propTypes = {\r\n    loginStatus: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loginStatus: state.users.loginStatus\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(UserAccount);","import React, { Component } from 'react'\r\nimport { Fragment } from \"react\"\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from 'prop-types'\r\nimport { Tooltip, IconButton, Button, TextField } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport { addCategory, setCategory, getAllCategories, updateCategoryName, deleteCategory, editCategory } from \"../../Redux/Actions/categoriesActions\";\r\n\r\n\r\nclass Category extends Component {\r\n\r\n    onChangeSetCategory = (categoryName) => {\r\n        this.props.setCategory(categoryName);\r\n    }\r\n\r\n    onClickAddCategory = () => {\r\n        let category = {\r\n            category: this.props.categories.category\r\n        }\r\n        this.props.addCategory(category)\r\n    }\r\n\r\n    onClickEditCategoryName = (index) => {\r\n        this.props.editCategory(index);\r\n    }\r\n\r\n    onClickUpdateCategory = () => {\r\n        let category = this.props.categories.category\r\n        this.props.updateCategoryName(category);\r\n    }\r\n\r\n    onClickDeleteCategory = () => {\r\n        let category = this.props.categories.category\r\n        this.props.deleteCategory(category);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <div className=\"add-categories\">\r\n                    <TextField onChange={(e)=>{this.onChangeSetCategory(e.target.value)}} value={this.props.category.categoryName} type=\"text\" label=\"Category Name\" variant=\"outlined\" />\r\n                    {\r\n                        this.props.categories.editCategory === false &&\r\n                        <Button onClick={()=>{this.onClickAddCategory()}} variant=\"contained\" color=\"primary\">\r\n                            Add\r\n                        </Button>\r\n                    }\r\n                    { \r\n                        this.props.categories.editCategory === true &&\r\n                        <Button onClick={()=>{this.onClickUpdateCategory()}} variant=\"contained\" color=\"primary\">\r\n                            Update\r\n                        </Button>\r\n                    }\r\n                </div>\r\n                <Container className=\"categories-table\">\r\n                    <Row id=\"categories-table\">\r\n                        <Col>#</Col>\r\n                        <Col>Category Name</Col>\r\n                        <Col>Edit</Col>\r\n                        <Col>Delete</Col>\r\n                    </Row>\r\n                    {\r\n                        this.props.categories.categories.map((category, index)=>{\r\n                            return(\r\n                                <Row id=\"categories-table-body\" key={index}>\r\n                                    <Col scope=\"row\">{index}</Col>\r\n                                    <Col>{category.categoryName}</Col>\r\n                                    <Col>\r\n                                        <Tooltip title=\"Edit\">\r\n                                            <IconButton onClick={()=>{this.onClickEditCategoryName(index)}}>\r\n                                                <EditIcon></EditIcon>\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Tooltip title=\"Delete\">\r\n                                            <IconButton onClick={()=>{this.onClickDeleteCategory()}}>\r\n                                                <DeleteIcon></DeleteIcon>\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                    </Col>\r\n                                </Row>\r\n                            )\r\n                        })\r\n                    }\r\n                </Container>\r\n                \r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nCategory.propTypes = {\r\n    categories: PropTypes.object.isRequired,\r\n    category: PropTypes.object.isRequired,\r\n    setCategory: PropTypes.func.isRequired,\r\n    addCategory: PropTypes.func.isRequired,\r\n    updateCategoryName: PropTypes.func.isRequired,\r\n    deleteCategory: PropTypes.func.isRequired,\r\n    editCategory: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        categories: state.categories,\r\n        category: state.categories.category\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { addCategory, setCategory, getAllCategories, updateCategoryName, deleteCategory, editCategory })(Category);","import React, { Component } from 'react'\r\nimport { Fragment } from \"react\"\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from 'prop-types'\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { FormControl, InputLabel, Select, TextField, Button } from \"@material-ui/core\";\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport { addSubCategory, editSubCategory, setSubCategory, setCategoryId, updateSubCategoryName, deleteSubCategory } from \"../../Redux/Actions/subCategoriesActions\";\r\n\r\n\r\nclass Category extends Component {\r\n\r\n    onChangeSetSubCategory =(subCategoryName) => {\r\n        this.props.setSubCategory(subCategoryName)\r\n    }\r\n\r\n    onChangeSetCategory = (category) => {\r\n        this.props.setCategoryId(category)\r\n    }\r\n\r\n    onClickAddSubCategory =() => {\r\n        let subCategory = {\r\n            subCategory: this.props.subCategories.subCategory,\r\n        }\r\n        this.props.addSubCategory(subCategory)\r\n    }\r\n\r\n    onClickEditSubCategoryName = (index) => {\r\n        this.props.editSubCategory(index)\r\n    }\r\n\r\n    onClickUpdateSubCategory = () => {\r\n        let subCategory = this.props.subCategory\r\n        this.props.updateSubCategoryName(subCategory);\r\n    }\r\n\r\n    onClickDeleteSubCategory = (subCategory, index) => {\r\n        this.props.deleteSubCategory(subCategory, index)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <div className=\"sub-categories\">\r\n                    <FormControl>\r\n                        <InputLabel>&nbsp;&nbsp;Category</InputLabel>\r\n                        <Select type=\"text\" native onChange={(e)=>{this.onChangeSetCategory(e.target.value)}} value={this.props.subCategory.category._id} variant=\"outlined\" >\r\n                            <option></option>\r\n                        {this.props.categories.categories.map((category, index)=>{\r\n                            return (\r\n                                <option key={index} value={category._id}>{category.categoryName}</option>\r\n                            )\r\n                        })}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <TextField onChange={(e)=>{this.onChangeSetSubCategory(e.target.value)}} value={this.props.subCategory.subCategoryName} type=\"text\" label=\"Sub-Category Name\" variant=\"outlined\" />\r\n                    {\r\n                        this.props.subCategories.editSubCategory === false &&\r\n                        <Button onClick={()=>{this.onClickAddSubCategory()}} variant=\"contained\" color=\"primary\">Add</Button>\r\n                    }\r\n                    {\r\n                        this.props.subCategories.editSubCategory === true &&\r\n                        <Button onClick={()=>{this.onClickUpdateSubCategory()}} variant=\"contained\" color=\"primary\">Update</Button>\r\n                    }\r\n                </div>\r\n                <Container className=\"categories-table\">\r\n                    <Row id=\"sub-categories-table\">\r\n                        <Col>#</Col>\r\n                        <Col>Sub-Category Name</Col>\r\n                        <Col>Category</Col>\r\n                        <Col>Edit</Col>\r\n                        <Col>Delete</Col>\r\n                    </Row>\r\n                    {\r\n                        this.props.subCategories.subCategories.map((subCategory, index)=>{\r\n                            return(\r\n                                <Row id=\"sub-categories-table-body\" key={index}>\r\n                                    <Col scope=\"row\">{index}</Col>\r\n                                    <Col>{subCategory.subCategoryName}</Col>\r\n                                    <Col>{subCategory.category.categoryName}</Col>\r\n                                    <Col>\r\n                                        <Tooltip title=\"Edit\">\r\n                                            <IconButton onClick={()=>{this.onClickEditSubCategoryName(index)}}>\r\n                                                <EditIcon></EditIcon>\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Tooltip title=\"Delete\">\r\n                                            <IconButton onClick={()=>{this.onClickDeleteSubCategory(subCategory, index)}}>\r\n                                                <DeleteIcon></DeleteIcon>\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                    </Col>\r\n                                </Row>\r\n                            )\r\n                        })\r\n                    }\r\n                </Container>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nCategory.propTypes = {\r\n    categories: PropTypes.object.isRequired,\r\n    subCategories: PropTypes.object.isRequired,\r\n    subCategory: PropTypes.object.isRequired,\r\n    setSubCategory: PropTypes.func.isRequired,\r\n    setCategoryId: PropTypes.func.isRequired,\r\n    editSubCategory: PropTypes.func.isRequired,\r\n    addSubCategory: PropTypes.func.isRequired,\r\n    updateSubCategoryName: PropTypes.func.isRequired,\r\n    deleteSubCategory: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        categories: state.categories,\r\n        subCategories: state.subCategories,\r\n        subCategory: state.subCategories.subCategory,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { addSubCategory, editSubCategory, setSubCategory, setCategoryId, updateSubCategoryName, deleteSubCategory })(Category);","import React, { Component } from 'react'\r\nimport { Fragment } from \"react\"\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from 'prop-types'\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { FormControl, InputLabel, Select, TextField, Button } from \"@material-ui/core\";\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport { setCategoryInSubSubCategory,\r\n    setSubCategoryInSubSubCategory,\r\n    addSubSubCategory,\r\n    editSubSubCategory,\r\n    setSubSubCategory,\r\n    updateSubSubCategory,\r\n    deleteSubSubCategory } from \"../../Redux/Actions/subSubCategoriesActions\";\r\n\r\n\r\nclass Category extends Component {\r\n\r\n    onChangeSetSubSubCategory =(subSubCategoryName) => {\r\n        this.props.setSubSubCategory(subSubCategoryName)\r\n    }\r\n\r\n    onChangeSetCategory = (category) => {\r\n        let cArray = this.props.categories.categories;\r\n        let category1\r\n        for (let i = 0; i < cArray.length; i++) {\r\n            if (cArray[i]._id === category) {\r\n                category1 = cArray[i]\r\n            }\r\n        }\r\n        this.props.setCategoryInSubSubCategory(category1)\r\n    }\r\n\r\n    onChangeSetSubCategory = (subCategory) => {\r\n        this.props.setSubCategoryInSubSubCategory(subCategory)\r\n    }\r\n\r\n    onClickAddSubSubCategory =() => {\r\n        let subSubCategory = {\r\n            subSubCategory: this.props.subSubCategories.subSubCategory,\r\n        }\r\n        this.props.addSubSubCategory(subSubCategory)\r\n    }\r\n\r\n    onClickEditSubSubCategoryName = (index) => {\r\n        this.props.editSubSubCategory(index)\r\n    }\r\n\r\n    onClickUpdateSubSubCategory = () => {\r\n        let subSubCategory = this.props.subSubCategory        \r\n        this.props.updateSubSubCategory(subSubCategory);\r\n    }\r\n\r\n    onClickDeleteSubSubCategory = (subSubCategory, index) => {\r\n        this.props.deleteSubSubCategory(subSubCategory, index);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <div className=\"sub-sub-categories\">\r\n                    <FormControl>\r\n                        <InputLabel>&nbsp;&nbsp;Category</InputLabel>\r\n                        <Select type=\"text\" native onChange={(e)=>{this.onChangeSetCategory(e.target.value)}} value={this.props.subSubCategory.category._id} variant=\"outlined\" >\r\n                            <option></option>\r\n                        {this.props.categories.categories.map((category, index)=>{\r\n                            return (\r\n                                <option key={index} value={category._id}>{category.categoryName}</option>\r\n                            )\r\n                        })}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <FormControl>\r\n                        <InputLabel>&nbsp;&nbsp;Sub-Category</InputLabel>\r\n                        <Select type=\"text\" native onChange={(e)=>{this.onChangeSetSubCategory(e.target.value)}} value={this.props.subSubCategory.subCategoryName} variant=\"outlined\" >\r\n                        <option aria-label=\"Sub Category\" value=\"\" />\r\n                        {this.props.subSubCategories.filterSubCategories === false && this.props.subCategories.subCategories.map((subCategory, index)=>{\r\n                            return (\r\n                                <option key={index} value={subCategory._id}>{subCategory.subCategoryName}</option>\r\n                            )\r\n                        })}\r\n                        { this.props.subSubCategories.filterSubCategories === true && this.props.subSubCategories.filteredSubCategories.map((subCategory, index)=>{\r\n                            return (\r\n                                <option key={index} value={subCategory._id}>{subCategory.subCategoryName}</option>\r\n                            )\r\n                        })}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <TextField onChange={(e)=>{this.onChangeSetSubSubCategory(e.target.value)}} value={this.props.subSubCategory.subSubCategoryName} type=\"text\" label=\"Sub-Sub-Category Name\" variant=\"outlined\" />\r\n                    { \r\n                        this.props.subSubCategories.editSubSubCategory === false && \r\n                        <Button onClick={()=>{this.onClickAddSubSubCategory()}} variant=\"contained\" color=\"primary\">Add</Button>\r\n                    }\r\n                    { \r\n                        this.props.subSubCategories.editSubSubCategory === true && \r\n                        <Button onClick={()=>{this.onClickUpdateSubSubCategory()}} variant=\"contained\" color=\"primary\">Update</Button>\r\n                    }\r\n                </div>\r\n                <Container className=\"sub-sub-categories-table\">\r\n                    <Row id=\"sub-sub-categories-table\">\r\n                        <Col>#</Col>\r\n                        <Col>Sub-Sub-Category Name</Col>\r\n                        <Col>Sub-Category Name</Col>\r\n                        <Col>Category Name</Col>\r\n                        <Col>Edit</Col>\r\n                        <Col>Delete</Col>\r\n                    </Row>\r\n                    {\r\n                        this.props.subSubCategories.subSubCategories.map((subSubCategory, index)=>{\r\n                            return(\r\n                                <Row id=\"sub-sub-categories-table-body\" key={index}>\r\n                                    <Col scope=\"row\">{index}</Col>\r\n                                        <Col>{subSubCategory.subSubCategoryName}</Col>\r\n                                        <Col>{subSubCategory.subCategory.subCategoryName}</Col>\r\n                                        <Col>{subSubCategory.category.categoryName}</Col>\r\n                                    <Col>\r\n                                        <Tooltip title=\"Edit\">\r\n                                            <IconButton onClick={()=>{this.onClickEditSubSubCategoryName(index)}}>\r\n                                                <EditIcon></EditIcon>\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Tooltip title=\"Delete\">\r\n                                            <IconButton onClick={()=>{this.onClickDeleteSubSubCategory(subSubCategory, index)}}>\r\n                                                <DeleteIcon></DeleteIcon>\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                    </Col>\r\n                                </Row>\r\n                            )\r\n                        })\r\n                    }\r\n                </Container>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nCategory.propTypes = {\r\n    categories: PropTypes.object.isRequired,\r\n    subCategories: PropTypes.object.isRequired,\r\n    subSubCategories: PropTypes.object.isRequired,\r\n    subSubCategory: PropTypes.object.isRequired,\r\n    setSubSubCategory: PropTypes.func.isRequired,\r\n    setCategoryInSubSubCategory: PropTypes.func.isRequired,\r\n    setSubCategoryInSubSubCategory: PropTypes.func.isRequired,\r\n    addSubSubCategory: PropTypes.func.isRequired,\r\n    editSubSubCategory: PropTypes.func.isRequired,\r\n    updateSubSubCategory: PropTypes.func.isRequired,\r\n    deleteSubSubCategory: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        categories: state.categories,\r\n        subCategories: state.subCategories,\r\n        subSubCategories: state.subSubCategories,\r\n        subSubCategory: state.subSubCategories.subSubCategory,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { \r\n    setCategoryInSubSubCategory,\r\n    setSubCategoryInSubSubCategory,\r\n    addSubSubCategory,\r\n    editSubSubCategory,\r\n    setSubSubCategory,\r\n    updateSubSubCategory,\r\n    deleteSubSubCategory })(Category);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from 'prop-types';\r\nimport { getAllCategories } from \"../../Redux/Actions/categoriesActions\";\r\nimport { getAllSubCategories } from \"../../Redux/Actions/subCategoriesActions\";\r\nimport { getAllSubSubCategories } from \"../../Redux/Actions/subSubCategoriesActions\";\r\nimport Category from \"./Category\";\r\nimport SubCategory from \"./SubCategory\";\r\nimport SubSubCategory from \"./SubSubCategory\";\r\n\r\n\r\nclass AllCategories extends Component {\r\n\r\n    state = {\r\n        showTab: \"categories\",\r\n        class1: \"list-group-item list-group-item-action\",\r\n        class2: \"list-group-item list-group-item-action\",\r\n        class3: \"list-group-item list-group-item-action\",\r\n    }\r\n\r\n    switchTab = (tab) => {\r\n        let active = \"list-group-item list-group-item-action active\";\r\n        let inactive = \"list-group-item list-group-item-action\";\r\n        if (tab === 1){\r\n            this.setState({\r\n                showTab: \"categories\",\r\n                class1: active,\r\n                class2: inactive,\r\n                class3: inactive\r\n            }, console.log(this.state.showTab))\r\n        } else if (tab === 2) {\r\n            this.setState({\r\n                showTab: \"sub-categories\",\r\n                class1: inactive,\r\n                class2: active,\r\n                class3: inactive\r\n            }, console.log(this.state.showTab))\r\n        } else if (tab === 3){\r\n            this.setState({\r\n                showTab: \"sub-sub-categories\",\r\n                class1: inactive,\r\n                class2: inactive,\r\n                class3: active\r\n            }, console.log(this.state.showTab))\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let admin = {\r\n            emailId: this.props.loginStatus.emailId,\r\n            headers: this.props.headers\r\n        }\r\n        this.props.getAllCategories(admin);\r\n        this.props.getAllSubCategories(admin);\r\n        this.props.getAllSubSubCategories(admin)\r\n    }\r\n\r\n    render() {\r\n        // console.log(\"Props in add categories => \" + JSON.stringify(this.props) )\r\n        return (\r\n            <div className=\"add-categories-container\">\r\n                <div className=\"categories-tab-panel\">\r\n                    <ul className=\"categories-tab-panel-list list-group-horizontal\">\r\n                        <li onClick={()=>{this.switchTab(1)}} className=\"list-group-item list-group-item-action\" key=\"1\">Categories</li>\r\n                        <li onClick={()=>{this.switchTab(2)}} className=\"list-group-item list-group-item-action\" key=\"2\">Sub-Categories</li>\r\n                        <li onClick={()=>{this.switchTab(3)}} className=\"list-group-item list-group-item-action\" key=\"3\">Sub-Sub-Categories</li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"categories-list-component\" >\r\n                    {\r\n                        this.state.showTab === \"categories\" && \r\n                        <Category></Category>\r\n                    }\r\n                    {\r\n                        this.state.showTab === \"sub-categories\" &&\r\n                        <SubCategory></SubCategory>\r\n                    }\r\n                    {\r\n                        this.state.showTab === \"sub-sub-categories\" &&\r\n                        <SubSubCategory></SubSubCategory>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nAllCategories.propTypes = {\r\n    loginStatus: PropTypes.object.isRequired,\r\n    user: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired,\r\n    categories: PropTypes.object.isRequired,\r\n    subCategories: PropTypes.object.isRequired,\r\n    subSubCategories: PropTypes.object.isRequired,\r\n    headers: PropTypes.object.isRequired,\r\n    getAllCategories: PropTypes.func.isRequired,\r\n    getAllSubCategories: PropTypes.func.isRequired,\r\n    getAllSubSubCategories: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.users.user,\r\n        errors: state.users.errors,\r\n        loginStatus: state.users.loginStatus,\r\n        categories: state.categories,\r\n        subCategories: state.subCategories,\r\n        subSubCategories: state.subSubCategories,\r\n        headers: state.users.headers\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps,{ \r\n    getAllCategories,\r\n    getAllSubCategories,\r\n    getAllSubSubCategories })(AllCategories);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, TextField, TextareaAutosize, Select, InputLabel, FormControl, Tooltip, IconButton } from '@material-ui/core/';\r\nimport { Container, Table } from \"reactstrap\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { getAllCategories } from \"../../Redux/Actions/categoriesActions\";\r\nimport { getAllSubCategories } from \"../../Redux/Actions/subCategoriesActions\";\r\nimport { getAllSubSubCategories } from \"../../Redux/Actions/subSubCategoriesActions\";\r\nimport { getAllProducts,\r\n    setProductName,\r\n    setBrandName,\r\n    setProductImage,\r\n    setProductDescription,\r\n    setProductCategory,\r\n    setProductSubCategory,\r\n    setProductSubSubCategory,\r\n    addProduct,\r\n    editProduct,\r\n    deleteProduct,\r\n    updateProduct } from \"../../Redux/Actions/productActions\";\r\n\r\nclass AddProducts extends Component {\r\n\r\n\r\n    componentDidMount = () => {\r\n        this.props.getAllProducts()\r\n        let admin = {\r\n            emailId: this.props.loginStatus.emailId,\r\n            headers: this.props.headers\r\n        }\r\n        this.props.getAllCategories(admin);\r\n        this.props.getAllSubCategories(admin);\r\n        this.props.getAllSubSubCategories(admin)\r\n    }\r\n\r\n    onChangeSetProductName = (productName) => {\r\n        this.props.setProductName(productName)\r\n    }\r\n\r\n    onChangeSetBrandName = (brandName) => {\r\n        this.props.setBrandName(brandName)\r\n    }\r\n\r\n    onChangeSetProductImage = (image) => {\r\n        this.props.setProductImage(image)\r\n    }\r\n\r\n    onChangeSetProductDescription = (productDescription) => {\r\n        this.props.setProductDescription(productDescription)\r\n    }\r\n\r\n    onChangeSetProductCategory = (categoryId) => {\r\n        let cArr = this.props.categories.categories;\r\n        let category\r\n        for (let i = 0; i < cArr.length; i++){\r\n            if (cArr[i]._id === categoryId) {\r\n                category = cArr[i]\r\n            }\r\n        }\r\n        this.props.setProductCategory(category)\r\n    }\r\n\r\n    onChangeSetProductSubCategory = (subCategoryId) => {\r\n        let sCArr = this.props.subCategories.subCategories;\r\n        let subCategory\r\n        for (let i = 0; i < sCArr.length; i++){\r\n            if (sCArr[i]._id === subCategoryId){\r\n                subCategory = sCArr[i]\r\n            }\r\n        }\r\n        this.props.setProductSubCategory(subCategory)\r\n    }\r\n\r\n    onChangeSetProductSubSubCategory = (subSubCategory) => {\r\n        this.props.setProductSubSubCategory(subSubCategory)\r\n    }\r\n\r\n    onClickAddProduct = () => {\r\n        let product = {\r\n            product: this.props.products.product,\r\n        }\r\n        if (this.props.products.editProduct === true){\r\n            this.props.updateProduct(product);\r\n        } else {\r\n            this.props.addProduct(product)\r\n        }\r\n    }\r\n\r\n    onClickEditProduct = (index) => {\r\n        this.props.editProduct(index);\r\n    }\r\n\r\n    onClickDeleteProduct = (index, product) => {\r\n        let uProduct = {\r\n            product: product,\r\n            index: index\r\n        }\r\n        this.props.deleteProduct(uProduct)\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"add-products-container mt-5\">\r\n                <div className=\"add-product\">\r\n                    <div className=\"add-product-row-1\">\r\n                        <div className=\"add-product-row-1-col-1\">\r\n                            <TextField onChange={(e)=>{this.onChangeSetProductName(e.target.value)}} value={this.props.products.product.productName} type=\"text\" label=\"Product Name\" variant=\"outlined\" />\r\n                        </div>\r\n                        <div className=\"add-product-row-1-col-2\">\r\n                            <TextField onChange={(e)=>{this.onChangeSetBrandName(e.target.value)}} value={this.props.products.product.brandName} type=\"text\" label=\"Brand Name\" variant=\"outlined\" />\r\n                        </div>\r\n                        <div className=\"add-product-row-1-col-3\">\r\n                            <TextField onChange={(e)=>{this.onChangeSetProductImage(e.target.value)}} value={this.props.products.product.image} type=\"text\" label=\"Image URL\" variant=\"outlined\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"add-product-row-2\">\r\n                        <div className=\"add-product-row-2-col-1\">\r\n                        <TextareaAutosize onChange={(e)=>{this.onChangeSetProductDescription(e.target.value)}} value={this.props.products.product.productDescription} rowsMin={3} aria-label=\"Product Description\" className=\"add-description\" placeholder=\"  Product Description\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"add-product-row-3\">\r\n                    <div className=\"add-product-row-3-col-1\">\r\n                        <FormControl className=\"select-p-c-1\">\r\n                            <InputLabel>&nbsp;&nbsp;Category</InputLabel>\r\n                            <Select type=\"text\" native onChange={(e)=>{this.onChangeSetProductCategory(e.target.value)}} value={this.props.products.product.category} variant=\"outlined\" >\r\n                                <option></option>\r\n                            {this.props.categories.categories.map((category, index)=>{\r\n                                return (\r\n                                    <option key={index} value={category._id}>{category.categoryName}</option>\r\n                                )\r\n                            })}\r\n                            </Select>\r\n                        </FormControl>\r\n                    </div>\r\n                    <div className=\"add-product-row-3-col-2\">\r\n                    {\r\n                        this.props.filters_1.filterSubCategories === false &&\r\n                        <FormControl className=\"select-p-c-1\">\r\n                            <InputLabel>&nbsp;&nbsp;Sub-Category</InputLabel>\r\n                            <Select type=\"text\" native onChange={(e)=>{this.onChangeSetProductSubCategory(e.target.value)}} value={this.props.products.product.subCategory} variant=\"outlined\" >\r\n                            <option aria-label=\"Sub Category\" value=\"                       \" />\r\n                            {this.props.subCategories.subCategories.map((subCategory, index)=>{\r\n                                return (\r\n                                    <option key={index} value={subCategory._id}>{subCategory.subCategoryName}</option>\r\n                                )\r\n                            })}\r\n                            </Select>\r\n                        </FormControl>\r\n                    }\r\n                    {\r\n                        this.props.filters_1.filterSubCategories === true &&\r\n                        <FormControl className=\"select-p-c-1\">\r\n                            <InputLabel>&nbsp;&nbsp;Sub-Category</InputLabel>\r\n                            <Select type=\"text\" native onChange={(e)=>{this.onChangeSetProductSubCategory(e.target.value)}} value={this.props.products.product.subCategory} variant=\"outlined\" >\r\n                            <option aria-label=\"Sub Category\" value=\"                       \" />\r\n                            {this.props.filters_1.filteredSubCategories.map((subCategory, index)=>{\r\n                                return (\r\n                                    <option key={index} value={subCategory._id}>{subCategory.subCategoryName}</option>\r\n                                )\r\n                            })}\r\n                            </Select>\r\n                        </FormControl>\r\n                    }\r\n                    </div>\r\n                    <div className=\"add-product-row-3-col-3\">\r\n                    {\r\n                        this.props.filters_1.filterSubSubCategories === false &&\r\n                        <FormControl className=\"select-p-c-1\">\r\n                            <InputLabel>&nbsp;&nbsp;Sub-Sub-Category</InputLabel>\r\n                            <Select type=\"text\" native onChange={(e)=>{this.onChangeSetProductSubSubCategory(e.target.value)}} value={this.props.products.product.subSubCategory} variant=\"outlined\" >\r\n                            <option aria-label=\"Sub Sub Category\" value=\"                       \" />\r\n                            {this.props.subSubCategories.subSubCategories.map((subSubCategory, index)=>{\r\n                                return (\r\n                                    <option key={index} value={subSubCategory._id}>{subSubCategory.subSubCategoryName}</option>\r\n                                )\r\n                            })}\r\n                            </Select>\r\n                        </FormControl>\r\n                    }\r\n                    {\r\n                        this.props.filters_1.filterSubSubCategories === true &&\r\n                        <FormControl className=\"select-p-c-1\">\r\n                            <InputLabel>&nbsp;&nbsp;Sub-Sub-Category</InputLabel>\r\n                            <Select type=\"text\" native onChange={(e)=>{this.onChangeSetProductSubSubCategory(e.target.value)}} value={this.props.products.product.subSubCategory} variant=\"outlined\" >\r\n                            <option aria-label=\"Sub Sub Category\" value=\"                       \" />\r\n                            {this.props.filters_1.filteredSubSubCategories.map((subSubCategory, index)=>{\r\n                                return (\r\n                                    <option key={index} value={subSubCategory._id}>{subSubCategory.subSubCategoryName}</option>\r\n                                )\r\n                            })}\r\n                            </Select>\r\n                        </FormControl>\r\n                    }\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"add-product-row-4\">\r\n                        <div className=\"add-product-row-4-col-1\">\r\n                            {\r\n                                this.props.products.editProduct === false &&\r\n                                <Button onClick={()=>{this.onClickAddProduct()}} variant=\"contained\" divor=\"primary\">\r\n                                    Add Product\r\n                                </Button>\r\n                            }\r\n                            {\r\n                                this.props.products.editProduct === true &&\r\n                                <Button onClick={()=>{this.onClickAddProduct()}} variant=\"contained\" divor=\"primary\">\r\n                                    Save Product\r\n                                </Button>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Container className=\"mt-3\">\r\n                    <Table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>Product Image</th>\r\n                                <th>Product Name</th>\r\n                                <th>Brand Name</th>\r\n                                <th>Description</th>\r\n                                <th>Category</th>\r\n                                <th>Sub-Category</th>\r\n                                <th>Sub-Sub-Category</th>\r\n                                <th>Edit</th>\r\n                                <th>Delete</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {\r\n                            this.props.products.products.map((product, index)=>{\r\n                                return (\r\n                                    <tr key={index}>\r\n                                        <th>{index}</th>\r\n                                        <td><img href={`${product.image}`} className=\"product-image-in-list\" alt=\"Product Image\"/></td>\r\n                                        <td>{product.productName}</td>\r\n                                        <td>{product.brandName}</td>\r\n                                        <td>{product.productDescription}</td>\r\n                                        <td>{product.category.categoryName}</td>\r\n                                        <td>{product.subCategory.subCategoryName}</td>\r\n                                        <td>{product.subSubCategory.subSubCategoryName}</td>\r\n                                        <td>\r\n                                        <Tooltip title=\"Edit\">\r\n                                            <IconButton onClick={()=>{this.onClickEditProduct(index)}}>\r\n                                                <EditIcon></EditIcon>\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                        </td>\r\n                                        <td>\r\n                                        <Tooltip title=\"Delete\">\r\n                                            <IconButton onClick={()=>{this.onClickDeleteProduct(index, product)}}>\r\n                                                <DeleteIcon></DeleteIcon>\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                        }\r\n                        </tbody>\r\n                    </Table>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nAddProducts.propTypes = {\r\n    user: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired,\r\n    loginStatus: PropTypes.object.isRequired,\r\n    products: PropTypes.object.isRequired,\r\n    categories: PropTypes.object.isRequired,\r\n    subCategories: PropTypes.object.isRequired,\r\n    subSubCategories: PropTypes.object.isRequired,\r\n    filters_1: PropTypes.object.isRequired,\r\n    setProductName: PropTypes.func.isRequired,\r\n    setBrandName: PropTypes.func.isRequired,\r\n    setProductImage: PropTypes.func.isRequired,\r\n    setProductDescription: PropTypes.func.isRequired,\r\n    setProductCategory: PropTypes.func.isRequired,\r\n    setProductSubCategory: PropTypes.func.isRequired,\r\n    setProductSubSubCategory: PropTypes.func.isRequired,\r\n    getAllProducts: PropTypes.func.isRequired,\r\n    getAllCategories: PropTypes.func.isRequired,\r\n    getAllSubCategories: PropTypes.func.isRequired,\r\n    getAllSubSubCategories: PropTypes.func.isRequired,\r\n    addProduct: PropTypes.func.isRequired,\r\n    editProduct: PropTypes.func.isRequired,\r\n    deleteProduct: PropTypes.func.isRequired,\r\n    updateProduct: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.users.user,\r\n        errors: state.users.errors,\r\n        loginStatus: state.users.loginStatus,\r\n        products: state.products,\r\n        categories: state.categories,\r\n        subCategories: state.subCategories,\r\n        subSubCategories: state.subSubCategories,\r\n        filters_1: state.products.filters_1,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, { getAllProducts,\r\n    getAllCategories,\r\n    getAllSubCategories,\r\n    getAllSubSubCategories,\r\n    setProductName,\r\n    setBrandName,\r\n    setProductImage,\r\n    setProductDescription,\r\n    setProductCategory,\r\n    setProductSubCategory,\r\n    setProductSubSubCategory,\r\n    addProduct,\r\n    editProduct,\r\n    deleteProduct,\r\n    updateProduct })(AddProducts);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getUserInfo } from \"../../Redux/Actions/userProfileActions\";\r\nimport UserNavbar from \"../Navbars/userNavbar\";\r\n\r\nclass UserDashboard extends Component {\r\n\r\n    componentDidMount = () => {\r\n        this.props.getUserInfo()\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"user-dashboard-container\">\r\n                {this.props.loginStatus.userIsAdmin === false && this.props.loginStatus.loggedIn === true && <UserNavbar></UserNavbar>}\r\n                <div className=\"user-dashboard\">\r\n                    This Is User Dashboard\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nUserDashboard.propTypes = {\r\n    getUserInfo: PropTypes.func.isRequired,\r\n    loginStatus: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loginStatus: state.users.loginStatus\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { getUserInfo })(UserDashboard);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Container, Row, Col, FormGroup, Label, Input, FormFeedback } from \"reactstrap\";\r\nimport { Tooltip, IconButton, FormControl, InputLabel, OutlinedInput, InputAdornment } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport UpdateIcon from \"@material-ui/icons/Update\"\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport UserNavbar from \"../Navbars/userNavbar\";\r\nimport { isUserLoggedIn } from \"../../Redux/Actions/userActions\";\r\nimport { \r\n    getUserInfo,\r\n    setUserUpdate,\r\n    setUpdateFirstName,\r\n    setUpdateMiddleName,\r\n    setUpdateLastName,\r\n    setUpdateUsername,\r\n    setUpdateEmailId,\r\n    setUpdateOldPassword,\r\n    setUpdateNewPassword,\r\n    setUpdateRepeatPassword,\r\n    updateUserName,\r\n    updateUserUsername,\r\n    updateUserEmailId,\r\n    updateUserPassword } from \"../../Redux/Actions/userProfileActions\";\r\n// import PasswordInput from \"../InputComponents/PasswordInput\";\r\n\r\nclass UserProfile extends Component {\r\n\r\n    state = {\r\n        editName: false,\r\n        editUsername: false,\r\n        editEmailId: false,\r\n        editPassword: false,\r\n        showPassword: false,\r\n    }\r\n\r\n    getDerivedStateFromProps = () => {\r\n        this.props.isUserLoggedIn();\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let userIsAdmin = this.props.userIsAdmin\r\n        this.props.setUserUpdate()\r\n        this.props.getUserInfo(userIsAdmin);\r\n    }\r\n\r\n    onClickEditName = () => {\r\n        this.setState({\r\n            editName: true\r\n        })\r\n    }\r\n\r\n    onChangeSetFirstName = (firstName) => {\r\n        this.props.setUpdateFirstName(firstName)\r\n    }\r\n\r\n    onChangeSetMiddleName = (middleName) => {\r\n        this.props.setUpdateMiddleName(middleName)\r\n    }\r\n\r\n    onChangeSetLastName = (lastName) => {\r\n        this.props.setUpdateLastName(lastName)\r\n    }\r\n\r\n    onClickUpdateName = () => {\r\n        let user = {\r\n            user: this.props.userUpdate,\r\n            userIsAdmin: this.props.userIsAdmin\r\n        }\r\n        this.props.updateUserName(user)\r\n        this.setState({\r\n            editName: false\r\n        })\r\n    }\r\n\r\n    onClickEditUsername = () => {\r\n        this.setState({\r\n            editUsername: true\r\n        })\r\n    }\r\n\r\n    onChangeSetUpdateUsername = (username) => {\r\n        this.props.setUpdateUsername(username)\r\n    }\r\n\r\n    onClickUpdateUsername = () => {\r\n        let user = {\r\n            user: this.props.userUpdate,\r\n            userIsAdmin: this.props.userIsAdmin\r\n        }\r\n        this.props.updateUserUsername(user)\r\n        this.setState({\r\n            editUsername: false\r\n        })\r\n    }\r\n\r\n    onClickEditEmailId = () => {\r\n        this.setState({\r\n            editEmailId: true\r\n        })\r\n    }\r\n\r\n    onChangeSetUpdateEmailId = (emailId) => {\r\n        this.props.setUpdateEmailId(emailId)\r\n    }\r\n\r\n    onClickUpdateEmailId = () => {\r\n        let user = {\r\n            user: this.props.userUpdate,\r\n            userIsAdmin: this.props.userIsAdmin\r\n        }\r\n        this.props.updateUserEmailId(user)\r\n        this.setState({\r\n            editEmailId: false\r\n        })\r\n    }\r\n\r\n    onClickEditPassword = () => {\r\n        this.setState({\r\n            editPassword: true\r\n        })\r\n    }\r\n\r\n    onChangeSetOldPassword = (oldPassword) => {\r\n        this.props.setUpdateOldPassword(oldPassword)\r\n    }\r\n\r\n    onChangeSetNewPassword = (newPassword) => {\r\n        this.props.setUpdateNewPassword(newPassword)\r\n    }\r\n\r\n    onChangeSetRepeatPassword = (repeatPassword) => {\r\n        this.props.setUpdateRepeatPassword(repeatPassword)\r\n    }\r\n\r\n    onClickUpdatePassword = () => {\r\n        let user = {\r\n            user: this.props.userUpdate,\r\n            userIsAdmin: this.props.userIsAdmin\r\n        }\r\n        this.props.updateUserPassword(user)\r\n        this.setState({\r\n            editPassword: false\r\n        })\r\n    }\r\n\r\n    toggleShowPassword = () => {\r\n        let showPassword = !this.state.showPassword;\r\n        this.setState({\r\n            showPassword: showPassword\r\n        })\r\n    }\r\n\r\n    handleMouseDownPassword = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Container className=\"user-profile mt-2\">\r\n            {this.props.loginStatus.userIsAdmin === false && this.props.loginStatus.loggedIn === true && <UserNavbar></UserNavbar>}\r\n                <Row className=\"user-profile-heading m-3 w-75\">\r\n                    <Col><span>Welcome {this.props.user.username}! This is your profile page</span></Col>\r\n                </Row>\r\n                <div className=\"user-profile-info mt-3\">\r\n                    <Row className=\"align-items-center\">\r\n                        <Col sm={3}  className=\"m-1\">\r\n                            <FormGroup>\r\n                                <Row>\r\n                                    <Label for=\"user-first-name\"><span>First Name</span></Label>\r\n                                </Row>\r\n                                <Row>\r\n                                    { this.state.editName === false &&\r\n                                        <span id=\"user-first-name\">{this.props.userUpdate.firstName}</span>}\r\n                                    { this.state.editName === true &&\r\n                                        <Input onChange={(e)=>{this.onChangeSetFirstName(e.target.value)}} id=\"user-first-name\" value={this.props.userUpdate.firstName}></Input>\r\n                                    }\r\n                                </Row>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col sm={3}  className=\"m-1\">\r\n                            <FormGroup>\r\n                                <Row>\r\n                                    <Label for=\"user-middle-name\"><span>Middle Name</span></Label>\r\n                                </Row>\r\n                                <Row>\r\n                                    { this.state.editName === false &&\r\n                                        <span id=\"user-middle-name\">{this.props.userUpdate.middleName}</span>}\r\n                                    { this.state.editName === true &&\r\n                                        <Input onChange={(e)=>{this.onChangeSetMiddleName(e.target.value)}} id=\"user-middle-name\" value={this.props.userUpdate.middleName}></Input>\r\n                                    }\r\n                                </Row>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col sm={3}  className=\"m-1\">\r\n                            <FormGroup>\r\n                                <Row>\r\n                                    <Label for=\"user-last-name\"><span>Last Name</span></Label>\r\n                                </Row>\r\n                                <Row>\r\n                                    { this.state.editName === false &&\r\n                                    <span id=\"user-last-name\">{this.props.userUpdate.lastName}</span>}\r\n                                    { this.state.editName === true &&\r\n                                        <Input onChange={(e)=>{this.onChangeSetLastName(e.target.value)}} id=\"user-last-name\" value={this.props.userUpdate.lastName}></Input>\r\n                                    }\r\n                                </Row>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col sm={2}>\r\n                            <FormGroup>\r\n                            { this.state.editName === false &&\r\n                                <Tooltip title=\"Edit\">\r\n                                    <IconButton onClick={()=>{this.onClickEditName()}}>\r\n                                        <EditIcon></EditIcon>\r\n                                    </IconButton>\r\n                                </Tooltip>}\r\n                            { this.state.editName === true &&\r\n                                <Tooltip title=\"Update\">\r\n                                    <IconButton onClick={()=>{this.onClickUpdateName()}}>\r\n                                        <UpdateIcon></UpdateIcon>\r\n                                    </IconButton>\r\n                                </Tooltip>}\r\n                            </FormGroup>\r\n                        </Col>\r\n                    </Row>\r\n                    <FormGroup row className=\"justify-content-start align-items-center\">\r\n                        <Col sm={3} className=\"text-left\"><span>Username</span></Col>\r\n                        <Col sm={6}>{ this.state.editUsername === false &&\r\n                            <span>{this.props.userUpdate.username}</span>}\r\n                            { this.state.editUsername === true &&\r\n                                <Input onChange={(e)=>{this.onChangeSetUpdateUsername(e.target.value)}} id=\"user-username\" value={this.props.userUpdate.username}></Input>}\r\n                        </Col>\r\n                        <Col sm={3}>\r\n                            { this.state.editUsername === false &&\r\n                                <Tooltip title=\"Edit\">\r\n                                    <IconButton onClick={()=>{this.onClickEditUsername()}}>\r\n                                        <EditIcon></EditIcon>\r\n                                    </IconButton>\r\n                                </Tooltip>}\r\n                            { this.state.editUsername === true &&\r\n                                <Tooltip title=\"Update\">\r\n                                    <IconButton onClick={()=>{this.onClickUpdateUsername()}}>\r\n                                        <UpdateIcon></UpdateIcon>\r\n                                    </IconButton>\r\n                                </Tooltip>}\r\n                        </Col>\r\n                    </FormGroup>\r\n                    <FormGroup row className=\"justify-content-start align-items-center\">\r\n                        <Col sm={3} className=\"text-left\"><span>Email Id</span></Col>\r\n                        <Col sm={6}>{ this.state.editEmailId === false &&\r\n                            <span>{this.props.userUpdate.emailId}</span>}\r\n                            { this.state.editEmailId === true && \r\n                                <Input onChange={(e)=>{this.onChangeSetUpdateEmailId(e.target.value)}} id=\"user-emailId\" value={this.props.userUpdate.emailId}></Input>}\r\n                                { this.props.errors.emailId.success === false &&<FormFeedback invalid>{this.props.errors.emailId.message}</FormFeedback>}\r\n                                { this.props.errors.emailId.success === true &&<FormFeedback valid>{this.props.errors.emailId.message}</FormFeedback>}\r\n                        </Col>\r\n                        <Col sm={3}>\r\n                            { this.state.editEmailId === false &&\r\n                                <Tooltip title=\"Edit\">\r\n                                    <IconButton onClick={()=>{this.onClickEditEmailId()}}>\r\n                                        <EditIcon></EditIcon>\r\n                                    </IconButton>\r\n                                </Tooltip>}\r\n                            { this.state.editEmailId === true &&\r\n                                <Tooltip title=\"Update\">\r\n                                    <IconButton onClick={()=>{this.onClickUpdateEmailId()}}>\r\n                                        <UpdateIcon></UpdateIcon>\r\n                                    </IconButton>\r\n                                </Tooltip>}\r\n                        </Col>\r\n                    </FormGroup>\r\n                    { this.state.editPassword === true &&\r\n                        <FormGroup row className=\"align-items-center m-1\">\r\n                        <Col sm={3}><span>Old Password</span></Col>\r\n                        <Col sm={6}>                            \r\n                            <FormControl variant=\"outlined\">\r\n                            <InputLabel htmlFor=\"old-password\">Old Password</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"old-password\"\r\n                                type={this.state.showPassword ? 'text' : 'password'}\r\n                                value={this.props.userUpdate.oldPassword}\r\n                                onChange={(e)=>{this.onChangeSetOldPassword(e.target.value)}}\r\n                                endAdornment={\r\n                                <InputAdornment position=\"end\">\r\n                                    <IconButton\r\n                                    aria-label=\"toggle password visibility\"\r\n                                    onClick={()=>{this.toggleShowPassword()}}\r\n                                    onMouseDown={(e)=>{this.handleMouseDownPassword(e)}}\r\n                                    edge=\"end\"\r\n                                    >\r\n                                    {this.state.showPassword ? <Tooltip title=\"Hide Password\"><Visibility /></Tooltip> : <Tooltip title=\"Show Password\"><VisibilityOff /></Tooltip>}\r\n                                    </IconButton>\r\n                                </InputAdornment>\r\n                                }\r\n                                labelWidth={70}\r\n                            />\r\n                            </FormControl>\r\n                        </Col>\r\n                    </FormGroup>\r\n                    }\r\n                    <FormGroup row className=\"align-items-center m-1\">\r\n                        <Col sm={3}>{this.state.editPassword === false &&<span>Password</span>}\r\n                        {this.state.editPassword === true &&<span>New Password</span>}</Col>\r\n                        <Col sm={6}>{ this.state.editPassword === false &&\r\n                            <span>********</span>}\r\n                            {\r\n                                this.state.editPassword === true &&\r\n                                <FormControl variant=\"outlined\">\r\n                                <InputLabel htmlFor=\"new-password\">New Password</InputLabel>\r\n                                <OutlinedInput\r\n                                    id=\"new-password\"\r\n                                    type={this.state.showPassword ? 'text' : 'password'}\r\n                                    value={this.props.userUpdate.newPassword}\r\n                                    onChange={(e)=>{this.onChangeSetNewPassword(e.target.value)}}\r\n                                    endAdornment={\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                        aria-label=\"toggle password visibility\"\r\n                                        onClick={()=>{this.toggleShowPassword()}}\r\n                                        onMouseDown={(e)=>{this.handleMouseDownPassword(e)}}\r\n                                        edge=\"end\"\r\n                                        >\r\n                                        {this.state.showPassword ? <Tooltip title=\"Hide Password\"><Visibility /></Tooltip> : <Tooltip title=\"Show Password\"><VisibilityOff /></Tooltip>}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                    }\r\n                                    labelWidth={70}\r\n                                />\r\n                                </FormControl>\r\n                            }\r\n\r\n                        </Col>\r\n                        <Col sm={3}>\r\n                            { this.state.editPassword === false &&\r\n                                <Tooltip title=\"Edit\">\r\n                                    <IconButton onClick={()=>{this.onClickEditPassword()}}>\r\n                                        <EditIcon></EditIcon>\r\n                                    </IconButton>\r\n                                </Tooltip>}\r\n                        </Col>\r\n                    </FormGroup>\r\n                    { this.state.editPassword === true &&\r\n                        <FormGroup row className=\"align-items-center m-1\">\r\n                        <Col sm={3}><span>Repeat Password</span></Col>\r\n                        <Col sm={6}>                            \r\n                            <FormControl variant=\"outlined\">\r\n                            <InputLabel htmlFor=\"repeat-password\">Repeat Password</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"repeat-password\"\r\n                                type={this.state.showPassword ? 'text' : 'password'}\r\n                                value={this.props.userUpdate.repeatPassword}\r\n                                onChange={(e)=>{this.onChangeSetRepeatPassword(e.target.value)}}\r\n                                endAdornment={\r\n                                <InputAdornment position=\"end\">\r\n                                    <IconButton\r\n                                    aria-label=\"toggle password visibility\"\r\n                                    onClick={()=>{this.toggleShowPassword()}}\r\n                                    onMouseDown={(e)=>{this.handleMouseDownPassword(e)}}\r\n                                    edge=\"end\"\r\n                                    >\r\n                                    {this.state.showPassword ? <Tooltip title=\"Hide Password\"><Visibility /></Tooltip> : <Tooltip title=\"Show Password\"><VisibilityOff /></Tooltip>}\r\n                                    </IconButton>\r\n                                </InputAdornment>\r\n                                }\r\n                                labelWidth={70}\r\n                            />\r\n                            </FormControl>\r\n                        </Col>\r\n                        <Col sm={3}>\r\n                            <Tooltip title=\"Update\">\r\n                                <IconButton onClick={()=>{this.onClickUpdatePassword()}}>\r\n                                    <UpdateIcon></UpdateIcon>\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </Col>\r\n                    </FormGroup>\r\n                    }\r\n                </div>\r\n\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nUserProfile.propTypes = {\r\n    user: PropTypes.object.isRequired,\r\n    userUpdate: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired,\r\n    loginStatus: PropTypes.object.isRequired,\r\n    userIsAdmin: PropTypes.bool.isRequired,\r\n    getUserInfo: PropTypes.func.isRequired,\r\n    setUserUpdate: PropTypes.func.isRequired,\r\n    setUpdateFirstName: PropTypes.func.isRequired,\r\n    setUpdateMiddleName: PropTypes.func.isRequired,\r\n    setUpdateLastName: PropTypes.func.isRequired,\r\n    setUpdateUsername: PropTypes.func.isRequired,\r\n    setUpdateEmailId: PropTypes.func.isRequired,\r\n    setUpdateOldPassword: PropTypes.func.isRequired,\r\n    setUpdateNewPassword: PropTypes.func.isRequired,\r\n    setUpdateRepeatPassword: PropTypes.func.isRequired,\r\n    updateUserName: PropTypes.func.isRequired,\r\n    updateUserUsername: PropTypes.func.isRequired,\r\n    updateUserEmailId: PropTypes.func.isRequired,\r\n    updateUserPassword: PropTypes.func.isRequired,\r\n    isUserLoggedIn: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.users.user,\r\n        userUpdate: state.users.userUpdate,\r\n        userIsAdmin: state.users.loginStatus.userIsAdmin,\r\n        errors: state.users.errors,\r\n        loginStatus: state.users.loginStatus\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { \r\n    isUserLoggedIn,\r\n    getUserInfo,\r\n    setUserUpdate,\r\n    setUpdateFirstName,\r\n    setUpdateMiddleName,\r\n    setUpdateLastName,\r\n    setUpdateUsername,\r\n    setUpdateEmailId,\r\n    setUpdateOldPassword,\r\n    setUpdateNewPassword,\r\n    setUpdateRepeatPassword,\r\n    updateUserName,\r\n    updateUserUsername,\r\n    updateUserEmailId,\r\n    updateUserPassword })(UserProfile);","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from 'prop-types';\r\nimport { getAllProducts, sendProductId, getProduct } from \"../../Redux/Actions/productActions\";\r\n\r\n\r\nconst withProductPageHOC = (WrappedProductPage) => {\r\n    \r\n    class withProductPageHOC extends Component {\r\n\r\n        componentWillMount = () => {\r\n            this.props.getAllProducts()\r\n            this.props.sendProductId(this.props.match.params.id)\r\n            let product = {\r\n                _id: this.props.product._id\r\n            }\r\n            this.props.getProduct(product)\r\n        }\r\n\r\n        render() {\r\n            console.log(this.props.match.params.id)\r\n            \r\n            return (\r\n                <div>\r\n                    <WrappedProductPage product={this.props.product} user={this.props.user} loginStatus={this.props.loginStatus}></WrappedProductPage>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n    \r\n    \r\n    withProductPageHOC.propTypes = {\r\n        products: PropTypes.array.isRequired,\r\n        product: PropTypes.object.isRequired,\r\n        user: PropTypes.object.isRequired,\r\n        loginStatus:  PropTypes.object.isRequired,\r\n        match: PropTypes.object.isRequired,\r\n        getAllProducts: PropTypes.func.isRequired,\r\n        sendProductId: PropTypes.func.isRequired,\r\n        getProduct: PropTypes.func.isRequired,\r\n    };\r\n    \r\n    const mapStateToProps = (state) => {\r\n        return {\r\n            product: state.products.product,\r\n            products: state.products.products,\r\n            user: state.users.user,\r\n            loginStatus: state.users.loginStatus,\r\n        }\r\n    }\r\n    \r\n    return connect(mapStateToProps, { getAllProducts, sendProductId, getProduct })(withProductPageHOC);\r\n}\r\n\r\nexport default withProductPageHOC;","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport { getUserRating, setUserRating, postUserRating, updateUserRating } from \"../../Redux/Actions/ratingsActions\"\r\n\r\n\r\n\r\nclass GiveRating extends Component {\r\n\r\n  state = {\r\n    ratingValue: \"\",\r\n    hover: \"\",\r\n    labels: {\r\n      0.5: 'Useless',\r\n      1: 'Useless+',\r\n      1.5: 'Poor',\r\n      2: 'Poor+',\r\n      2.5: 'Ok',\r\n      3: 'Ok+',\r\n      3.5: 'Good',\r\n      4: 'Good+',\r\n      4.5: 'Excellent',\r\n      5: 'Excellent+',\r\n    }\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    let rating = {\r\n      product: this.props.product._id,\r\n      user: this.props.user._id\r\n    }\r\n    this.props.getUserRating(rating)\r\n  }\r\n\r\n  onChangeSetUserRatingValue = (value) => {\r\n    // console.log(\"value => \"+value)\r\n    let rating = {\r\n      rating: value,\r\n      product: this.props.product._id,\r\n      user: this.props.user._id\r\n    }\r\n    let rating2 = {\r\n      _id: this.props.rating._id,\r\n      rating: value,\r\n      product: this.props.product._id,\r\n      user: this.props.user._id\r\n    }\r\n    this.props.setUserRating(rating)\r\n    if (this.props.ratings.userRatingExists === true) {\r\n      this.props.updateUserRating(rating2)\r\n    } else {\r\n      this.props.postUserRating(rating);\r\n    }\r\n    this.setState({\r\n      ratingValue: value\r\n    })\r\n  }\r\n\r\n  onChangeSetHover = (e, hover) => {\r\n    this.setState({\r\n      hover: hover\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\r\n          <Typography component=\"legend\">Rate Product</Typography>\r\n          <Rating\r\n            name=\"simple-feedback\"\r\n            size=\"large\"\r\n            value={parseFloat(this.props.rating.rating)}\r\n            precision ={0.5}\r\n            onChange={(e)=>{this.onChangeSetUserRatingValue(e.target.value)}}\r\n            onChangeActive={(e, hover)=>{this.onChangeSetHover(e, hover)}}/>\r\n        </Box>\r\n        {this.state.ratingValue !== null && <Box ml={2}>{this.state.labels[this.state.hover !== -1 ? this.state.hover : this.state.ratingValue]}</Box>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nGiveRating.propTypes = {\r\n  getUserRating: PropTypes.func.isRequired,\r\n  setUserRating: PropTypes.func.isRequired,\r\n  postUserRating: PropTypes.func.isRequired,\r\n  updateUserRating: PropTypes.func.isRequired,\r\n  rating: PropTypes.object.isRequired,\r\n  product: PropTypes.object.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  ratings: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ratings: state.ratings,\r\n    rating: state.ratings.rating,\r\n    product: state.products.product,\r\n    user: state.users.user\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { getUserRating, setUserRating, postUserRating, updateUserRating })(GiveRating);\r\n","import { Get_User_Rating, Set_User_Rating, Post_User_Rating, Update_User_Rating } from \"./actionTypes\";\r\nimport { api } from \"./axiosDefaults\";\r\n\r\nexport const getUserRating = (rating) => async (dispatch) => {\r\n    console.log(rating)\r\n    let res = await api.patch(\"/ratings/get-user-rating\", rating)\r\n    dispatch({\r\n        type: Get_User_Rating,\r\n        payload: res\r\n    })\r\n}\r\n\r\nexport const setUserRating = (rating) => async (dispatch) => {\r\n    dispatch({\r\n        type: Set_User_Rating,\r\n        payload: rating\r\n    })\r\n}\r\n\r\nexport const postUserRating = (rating) => async (dispatch) => {\r\n    let res = await api.post(\"/ratings/post-user-rating\", rating)\r\n    dispatch({\r\n        type: Post_User_Rating,\r\n        payload: res\r\n    })\r\n}\r\n\r\nexport const updateUserRating = (rating) => async (dispatch) => {\r\n    let res = await api.patch(\"/ratings/update-user-rating\", rating)\r\n    dispatch({\r\n        type: Update_User_Rating,\r\n        payload: res\r\n    })\r\n}","import React, { Component } from 'react';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\n\r\n\r\nclass ShowRating extends Component {\r\n\r\n  state = {\r\n    ratingValue: \"2.5\",\r\n    hover: \"\",\r\n    labels: {\r\n      0.5: 'Useless',\r\n      1: 'Useless+',\r\n      1.5: 'Poor',\r\n      2: 'Poor+',\r\n      2.5: 'Ok',\r\n      3: 'Ok+',\r\n      3.5: 'Good',\r\n      4: 'Good+',\r\n      4.5: 'Excellent',\r\n      5: 'Excellent+',\r\n    }\r\n  }\r\n\r\n  onChangeSetRatingValue = (value) => {\r\n    console.log(\"value => \"+value)\r\n    this.setState({\r\n      ratingValue: value\r\n    })\r\n  }\r\n\r\n  onChangeSetHover = (e, hover) => {\r\n    console.log(\"hover => \"+hover)\r\n    this.setState({\r\n      hover: hover\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"ratings-display\">\r\n        <div className=\"ratings-table-rows\">\r\n          <div className=\"ratings-table-columns\">\r\n            <div><span>5</span></div>\r\n            <div><LinearProgress variant=\"determinate\" value={((parseFloat(this.props.product.ratings[10]))*100)/(parseFloat(this.props.product.totalRatings))}></LinearProgress></div>\r\n            <div><span>{this.props.product.ratings[10]}</span></div>\r\n          </div>\r\n          <div className=\"ratings-table-columns\">\r\n            <div><span>4.5</span></div>\r\n            <div><LinearProgress variant=\"determinate\" value={((parseFloat(this.props.product.ratings[9]))*100)/(parseFloat(this.props.product.totalRatings))}></LinearProgress></div>\r\n            <div><span>{this.props.product.ratings[9]}</span></div>\r\n          </div>\r\n          <div className=\"ratings-table-columns\">\r\n            <div><span>4</span></div>\r\n            <div><LinearProgress variant=\"determinate\" value={((parseFloat(this.props.product.ratings[8]))*100)/(parseFloat(this.props.product.totalRatings))}></LinearProgress></div>\r\n            <div><span>{this.props.product.ratings[8]}</span></div>\r\n          </div>\r\n          <div className=\"ratings-table-columns\">\r\n            <div><span>3.5</span></div>\r\n            <div><LinearProgress variant=\"determinate\" value={((parseFloat(this.props.product.ratings[7]))*100)/(parseFloat(this.props.product.totalRatings))}></LinearProgress></div>\r\n            <div><span>{this.props.product.ratings[7]}</span></div>\r\n          </div>\r\n          <div className=\"ratings-table-columns\">\r\n            <div><span>3</span></div>\r\n            <div><LinearProgress variant=\"determinate\" value={((parseFloat(this.props.product.ratings[6]))*100)/(parseFloat(this.props.product.totalRatings))}></LinearProgress></div>\r\n            <div><span>{this.props.product.ratings[6]}</span></div>\r\n          </div>\r\n          <div className=\"ratings-table-columns\">\r\n            <div><span>2.5</span></div>\r\n            <div><LinearProgress variant=\"determinate\" value={((parseFloat(this.props.product.ratings[5]))*100)/(parseFloat(this.props.product.totalRatings))}></LinearProgress></div>\r\n            <div><span>{this.props.product.ratings[5]}</span></div>\r\n          </div>\r\n          <div className=\"ratings-table-columns\">\r\n            <div><span>2</span></div>\r\n            <div><LinearProgress variant=\"determinate\" value={((parseFloat(this.props.product.ratings[4]))*100)/(parseFloat(this.props.product.totalRatings))}></LinearProgress></div>\r\n            <div><span>{this.props.product.ratings[4]}</span></div>\r\n          </div>\r\n          <div className=\"ratings-table-columns\">\r\n            <div><span>1.5</span></div>\r\n            <div><LinearProgress variant=\"determinate\" value={((parseFloat(this.props.product.ratings[3]))*100)/(parseFloat(this.props.product.totalRatings))}></LinearProgress></div>\r\n            <div><span>{this.props.product.ratings[3]}</span></div>\r\n          </div>\r\n          <div className=\"ratings-table-columns\">\r\n            <div><span>1</span></div>\r\n            <div><LinearProgress variant=\"determinate\" value={((parseFloat(this.props.product.ratings[2]))*100)/(parseFloat(this.props.product.totalRatings))}></LinearProgress></div>\r\n            <div><span>{this.props.product.ratings[2]}</span></div>\r\n          </div>\r\n          <div className=\"ratings-table-columns\">\r\n            <div><span>0.5</span></div>\r\n            <div><LinearProgress variant=\"determinate\" value={((parseFloat(this.props.product.ratings[1]))*100)/(parseFloat(this.props.product.totalRatings))}></LinearProgress></div>\r\n            <div><span>{this.props.product.ratings[1]}</span></div>\r\n          </div>\r\n        </div>\r\n        <div className=\"rating-stars\">\r\n        <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\r\n        <Typography component=\"legend\">Total Ratings {parseFloat(this.props.product.totalRatings)}</Typography>\r\n            <Rating\r\n            readOnly\r\n              name=\"simple-feedback\"\r\n              size=\"large\"\r\n              value={parseFloat(this.props.product.avgRating)}\r\n              precision ={0.5}/>\r\n          </Box>\r\n          {this.state.ratingValue !== null && <Typography ml={2}>{this.state.labels[this.props.product.avgRating]}</Typography>}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nShowRating.propTypes = {\r\n  \r\n};\r\n\r\nexport default ShowRating;\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport { getUserReview,\r\n    editUserReview,\r\n    setUserReview,\r\n    postUserReview,\r\n    updateUserReview,\r\n    deleteUserReview } from \"../../Redux/Actions/reviewsActions\";\r\n\r\n\r\nclass UserReview extends Component {\r\n\r\n    componentDidMount = () => {\r\n        let review = {\r\n            product: this.props.product._id,\r\n            user: this.props.user._id\r\n        }\r\n        this.props.getUserReview(review)\r\n    }\r\n\r\n    onClickEditUserReview = () => {\r\n        this.props.editUserReview()\r\n    }\r\n\r\n    onChangeSetUserReview = (userReview) => {\r\n        let review = {\r\n            review: userReview,\r\n            product: this.props.product._id,\r\n            user: this.props.user._id\r\n        }\r\n        this.props.setUserReview(review);\r\n    }\r\n\r\n    onClickUpdateUserReview = () => {\r\n        let review = this.props.review\r\n        this.props.updateUserReview(review);\r\n    }\r\n\r\n    onClickPostUserReview = () => {\r\n        let review = this.props.review\r\n        this.props.postUserReview(review);\r\n    }\r\n\r\n    onClickDeleteUserReview = () => {\r\n        let review = this.props.review\r\n        this.props.deleteUserReview(review);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"user-review-component\">\r\n                <div className=\"user-review\">\r\n                    <div className=\"review-header\"></div>\r\n                    <div className=\"review-box\">\r\n                        { \r\n                            this.props.reviews.reviewExists === true && this.props.reviews.editReview === false &&\r\n                            <div className=\"show-user-review\">\r\n                                <div className=\"user-review-buttons\">\r\n                                    <div>{this.props.review.user.username}</div>\r\n                                    <div><Button onClick={()=>{this.onClickEditUserReview()}} variant=\"contained\" color=\"primary\">Edit</Button></div>\r\n                                    <div><Button onClick={()=>{this.onClickDeleteUserReview()}} variant=\"contained\" color=\"primary\">Delete</Button></div>\r\n                                    <div>{this.props.review.createdAt}</div>\r\n                                </div>\r\n                                <div><p>{this.props.review.review}</p></div>\r\n                            </div>\r\n                        }\r\n                        {   \r\n                            this.props.reviews.reviewExists === true && this.props.reviews.editReview === true &&\r\n                            <div className=\"update-review\">\r\n                                <div >\r\n                                    <TextareaAutosize onChange={(e)=>{this.onChangeSetUserReview(e.target.value)}} className=\"review-text-box\" value={this.props.review.review} aria-label=\"minimum height\" rowsMin={3} placeholder=\"Update Review\" />\r\n                                </div>\r\n                                <div className=\"update-review-button\">\r\n                                    <Button onClick={()=>{this.onClickUpdateUserReview()}} variant=\"contained\" color=\"primary\">Update</Button>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                        { \r\n                            this.props.reviews.reviewExists === false &&\r\n                            <div className=\"write-review\">\r\n                                <div>\r\n                                    <TextareaAutosize onChange={(e)=>{this.onChangeSetUserReview(e.target.value)}} className=\"review-text-box\" value={this.props.review.review} aria-label=\"minimum height\" rowsMin={3} placeholder=\"Write Review\" />\r\n                                </div>\r\n                                <div className=\"post-review-button\">\r\n                                    <Button onClick={()=>{this.onClickPostUserReview()}} variant=\"contained\" color=\"primary\">Post</Button>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nUserReview.propTypes = {\r\n    reviews: PropTypes.object.isRequired,\r\n    review: PropTypes.object.isRequired,\r\n    product: PropTypes.object.isRequired,\r\n    user: PropTypes.object.isRequired,\r\n    getUserReview: PropTypes.func.isRequired,\r\n    editUserReview: PropTypes.func.isRequired,\r\n    setUserReview: PropTypes.func.isRequired,\r\n    postUserReview: PropTypes.func.isRequired,\r\n    updateUserReview: PropTypes.func.isRequired,\r\n    deleteUserReview: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        reviews: state.reviews,\r\n        review: state.reviews.review,\r\n        product: state.products.product,\r\n        user: state.users.user,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { getUserReview,\r\n    editUserReview,\r\n    setUserReview,\r\n    postUserReview,\r\n    updateUserReview,\r\n    deleteUserReview })(UserReview);","import { api, Axios } from \"./axiosDefaults\";\r\nimport { Get_User_Review,\r\n    Get_Product_Reviews,\r\n    Edit_User_Review,\r\n    Set_User_Review,\r\n    Post_User_Review,\r\n    Update_User_Review,\r\n    Delete_User_Review } from \"./actionTypes\";\r\n\r\nexport const getUserReview = (review) => async (dispatch) => {\r\n    console.log(\"get user review => \"+ JSON.stringify(review))\r\n    let res = await api.patch(\"/reviews/get-user-review\", review)\r\n    dispatch({\r\n        type: Get_User_Review,\r\n        payload: res\r\n    })\r\n}\r\n\r\nexport const getProductReviews = (product) => async (dispatch) => {\r\n    console.log(\"Product ID => \" + JSON.stringify(product))\r\n    let res = await Axios.patch(\"/reviews/get-product-reviews\", product);\r\n    dispatch({\r\n        type: Get_Product_Reviews,\r\n        payload: res\r\n    })\r\n}\r\n\r\nexport const editUserReview = () => (dispatch) => {\r\n    dispatch({\r\n        type: Edit_User_Review\r\n    })\r\n}\r\n\r\nexport const setUserReview = (review) => (dispatch) => {\r\n    dispatch({\r\n        type: Set_User_Review,\r\n        payload: review\r\n    })\r\n}\r\n\r\nexport const postUserReview = (review) => async (dispatch) => {\r\n    let res = await api.patch(\"/reviews/post-user-review\", review);\r\n    dispatch({\r\n        type: Post_User_Review,\r\n        payload: res\r\n    })\r\n}\r\n\r\nexport const updateUserReview = (review) => async (dispatch) => {\r\n    let res = await api.patch(\"/reviews/update-user-review\", review)\r\n    dispatch({\r\n        type: Update_User_Review,\r\n        payload: res\r\n    })\r\n}\r\n\r\nexport const deleteUserReview = (review) => async (dispatch) => {\r\n    let res = await api.patch(\"/reviews/delete-user-review\", review)\r\n    dispatch({\r\n        type: Delete_User_Review,\r\n        payload: res\r\n    })\r\n}","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from 'prop-types';\r\nimport { getProductReviews } from \"../../Redux/Actions/reviewsActions\";\r\n// import ToggleButton from '@material-ui/lab/ToggleButton';\r\n// import ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\n// import Tooltip from '@material-ui/core/Tooltip';\r\n// import ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\n// import ThumbDownIcon from '@material-ui/icons/ThumbDown';\r\n\r\nclass ProductReviewsList extends Component {\r\n\r\n    state = {\r\n        toggleChoice: null\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let product = {\r\n            product: this.props.product._id\r\n        }\r\n        this.props.getProductReviews(product)\r\n    }\r\n\r\n    toggleLikeDislike = (choice) => {\r\n        this.setState({\r\n            toggleChoice: choice\r\n        }, console.log(this.state.toggleChoice))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"product-reviews-list\">\r\n                {\r\n                    this.props.reviews.map((review, index) => {\r\n                        return (\r\n                            <div className=\"product-review\" key={index}>\r\n                                <div className=\"product-review-header\">\r\n                                    <div className=\"product-review-username\"><span>{review.user.username}</span></div>\r\n                                    <div className=\"product-review-likes\">\r\n                                                    \r\n                                    </div>\r\n                                    <div className=\"product-review-dislikes\">\r\n                                        \r\n                                    </div>\r\n                                    <div className=\"product-review-date\"><span>{review.date}</span></div>\r\n                                </div>\r\n                                <div className=\"product-review-body\">\r\n                                    <p>{review.review}</p>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nProductReviewsList.propTypes = {\r\n    reviews: PropTypes.array.isRequired,\r\n    product: PropTypes.object.isRequired,\r\n    user: PropTypes.object.isRequired,\r\n    getProductReviews: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        product: state.products.product,\r\n        reviews: state.reviews.productReviews,\r\n        user: state.users.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { getProductReviews })(ProductReviewsList);\r\n\r\n// <ToggleButtonGroup\r\n//     value={this.state.toggleChoice}\r\n//     exclusive\r\n//     onChange={(e)=>{this.toggleLikeDislike(e.target.value)}}\r\n//     aria-label=\"text alignment\">\r\n//     <Tooltip title=\"Like\">\r\n//         <ToggleButton value=\"like\">\r\n//             <ThumbUpIcon></ThumbUpIcon>\r\n//         </ToggleButton>\r\n//     </Tooltip>\r\n//     <Tooltip title=\"Dislike\">\r\n//         <ToggleButton value=\"dislike\">\r\n//             <ThumbDownIcon></ThumbDownIcon>\r\n//         </ToggleButton>\r\n//     </Tooltip>\r\n// </ToggleButtonGroup>","import React, { Component } from \"react\";\r\n// import PropTypes from \"prop-types\";\r\nimport withProductPageHOC from \"./withProductPageHOC\";\r\nimport GiveRating from \"../Ratings/GiveRating\";\r\nimport ShowRating from \"../Ratings/ShowRating\";\r\nimport UserReview from \"../Reviews/UserReview\";\r\nimport ProductReviewsList from \"../Reviews/ProductReviewsList\";\r\n\r\nclass ProductPage extends Component {\r\n\r\n    componentDidMount = () => {\r\n        // this.props.getAllProducts()\r\n    }\r\n\r\n    render () {\r\n        \r\n        return (\r\n            <div className=\"product-page-container\">\r\n                <div className=\"product-container\">\r\n                    <div className=\"product-image-container\">\r\n                        <img href={this.props.product.image} alt={this.props.product.productName}></img>\r\n                    </div>\r\n                    <div className=\"product-info\">\r\n                        <div className=\"product-name\"><span>{this.props.product.productName}</span></div>\r\n                            <div className=\"product-brand-name\"><span>{this.props.product.brandName}</span></div>\r\n                            <div className=\"product-categories\">\r\n                                <div className=\"product-category\"><span>{this.props.product.category.categoryName}</span></div>\r\n                                <div className=\"product-sub-category\"><span>{this.props.product.subCategory.subCategoryName}</span></div>\r\n                                <div className=\"product-sub-sub-category\"><span>{this.props.product.subSubCategory.subSubCategoryName}</span></div>\r\n                            </div>\r\n                        <div className=\"product-description\"><span>{this.props.product.description}</span></div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"product-ratings-and-reviews\">\r\n                    <div className=\"rating-container\">\r\n                        <div className=\"product-raging\">\r\n                            <ShowRating product={this.props.product} ></ShowRating>\r\n                        </div>\r\n                        <div className=\"give-rating\">\r\n                            { this.props.loginStatus.loggedIn === true && <GiveRating></GiveRating>}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"product-reviews\">\r\n                        <div className=\"write-product-review\">\r\n                            {\r\n                                this.props.loginStatus.loggedIn === true &&\r\n                                <UserReview></UserReview>\r\n                            }\r\n                        </div>\r\n                        <div className=\"product-reviews-list\">\r\n                            <ProductReviewsList></ProductReviewsList>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nProductPage.propTypes = {\r\n    \r\n}\r\n\r\nconst WrappedProductPage = withProductPageHOC(ProductPage);\r\n\r\nexport default WrappedProductPage;","import React, { Component } from \"react\";\r\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\r\nimport Header from \"./Navbars/header\";\r\nimport HomePage from \"./homePage\";\r\nimport UserLogin from \"./User/userLogin\";\r\nimport UserRegistration from \"./User/userRegistration\"\r\nimport AdminDashboard from \"./Admin/adminDashboard\";\r\nimport AdminProfile from \"./Admin/adminProfile\";\r\nimport Products from \"./Products/products\";\r\nimport UserAccount from \"./User/userAccount\";\r\nimport AllCategories from \"./Categories/AllCategories\";\r\nimport AddProducts from \"./Products/addProducts\";\r\nimport UserDashboard from \"./User/userDashboard\";\r\nimport UserProfile from \"./User/userProfile\";\r\nimport WrappedProductPage from \"./Products/productPage\";\r\n\r\nclass Wrapper extends Component {\r\n\r\n    render(){\r\n        return(\r\n            <Router>\r\n                <div className=\"wrapper\">\r\n                    <Header></Header>\r\n                    <Switch>\r\n                        <Route exact path=\"/\"><HomePage></HomePage></Route>\r\n                        <Route exact path=\"/products\"><Products></Products></Route>\r\n                        <Route exact path=\"/admin-profile\"><AdminProfile></AdminProfile></Route>\r\n                        <Route exact path=\"/admin-dashboard\"><AdminDashboard></AdminDashboard></Route>\r\n                        <Route exact path=\"/user-login\"><UserLogin></UserLogin></Route>\r\n                        <Route exact path=\"/user-registration\"><UserRegistration></UserRegistration></Route>\r\n                        <Route exact path=\"/user-account\"><UserAccount></UserAccount></Route>\r\n                        <Route exact path=\"/all-categories\"><AllCategories></AllCategories></Route>\r\n                        <Route exact path=\"/add-products\"><AddProducts></AddProducts></Route>\r\n                        <Route exact path=\"/user-profile\"><UserProfile></UserProfile></Route>\r\n                        <Route exact path=\"/user-dashboard\"><UserDashboard></UserDashboard></Route>\r\n                        <Route exact path=\"/product-page/:id\" component={WrappedProductPage}></Route>\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Wrapper;","import React from 'react';\r\nimport './App.css';\r\nimport Wrapper from \"./Components/Wrapper\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n      <div className=\"App\">\r\n        <Wrapper></Wrapper>\r\n      </div>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","\r\nlet categoriesState = {\r\n    category: {\r\n        _id: \"\",\r\n        categoryName: \"\",\r\n        products: [],\r\n        subCategories: [],\r\n        subSubCategories: [],\r\n    },\r\n    categories: [{\r\n        categoryName: \"Home Appliances\",\r\n        products: [],\r\n        subCategories: []\r\n    },{\r\n        categoryName: \"Cloths\",\r\n        products: [],\r\n        subCategories: []\r\n    }],\r\n    categoriesCopy: [],\r\n    editIndex: \"\",\r\n    editCategory: false\r\n}\r\n\r\nexport default categoriesState;","import categoriesState from \"../States/categoriesState\";\r\nimport {Set_Category_Name, Add_Category_Name, Get_All_Categories, Update_Category_Name, Delete_Category, Edit_Category } from \"../Actions/actionTypes\";\r\n\r\nlet categoriesReducer = ( state = categoriesState, action ) => {\r\n    let stateCopy = JSON.parse(JSON.stringify(state));\r\n\r\n    switch (action.type){\r\n\r\n        case Set_Category_Name:\r\n            stateCopy.category.categoryName = action.payload\r\n            console.log(stateCopy)\r\n            return stateCopy;\r\n\r\n        case Get_All_Categories:\r\n            if (action.payload.data.success === true){\r\n                stateCopy.categories = action.payload.data.categories;\r\n            }\r\n            console.log(stateCopy)\r\n            return stateCopy\r\n            \r\n        case Add_Category_Name:\r\n            console.log(action.payload);\r\n            stateCopy.categories.push(action.payload.data.category);\r\n            console.log(stateCopy);\r\n            return stateCopy;\r\n\r\n        case Edit_Category:\r\n            let eIndex = action.payload\r\n            stateCopy.editIndex = action.payload \r\n            stateCopy.editCategory = true;\r\n            stateCopy.category.categoryName = stateCopy.categories[eIndex].categoryName;\r\n            stateCopy.category._id = stateCopy.categories[eIndex]._id;\r\n            console.log(stateCopy);\r\n            return stateCopy;\r\n    \r\n\r\n        case Update_Category_Name:\r\n            console.log(action.payload);\r\n            let uIndex = stateCopy.editIndex;\r\n            stateCopy.categories[uIndex].categoryName = action.payload.data.updated.categoryName;\r\n            stateCopy.editCategory = false;\r\n            console.log(stateCopy);\r\n            return stateCopy;\r\n\r\n        case Delete_Category:\r\n            console.log(action.payload);\r\n            let dId = action.payload.data.deleted._id\r\n            let cArray = stateCopy.categories\r\n            for (let i = 0; i < cArray.length; i++){\r\n                if (cArray[i]._id === dId){\r\n                    cArray.splice(i, 1);\r\n                }\r\n            }\r\n            stateCopy.categories = cArray;\r\n            console.log(stateCopy);\r\n            return stateCopy\r\n\r\n        default:\r\n            return stateCopy\r\n    }\r\n}\r\n\r\nexport default categoriesReducer;","\r\nlet subCategoriesState = {\r\n    subCategory: {\r\n        _id: \"\",\r\n        subCategoryName: \"\",\r\n        category: \"\",\r\n        products: [],\r\n        subSubCategories: []\r\n    },\r\n    subCategories: [{\r\n        subCategoryName: \"Mobile Phones\",\r\n        category: {\r\n            _id: \"\",\r\n            categoryName: \"\"\r\n        },\r\n        products: [],\r\n        subSubCategories: []\r\n    },{\r\n        subCategoryName: \"TV\",\r\n        category: {\r\n            _id: \"\",\r\n            categoryName: \"\"\r\n        },\r\n        products: [],\r\n        subSubCategories: []\r\n    },{\r\n        subCategoryName: \"Fridge\",\r\n        category: {\r\n            _id: \"\",\r\n            categoryName: \"\"\r\n        },\r\n        products: [],\r\n        subSubCategories: []\r\n    },],\r\n    subCategoriesCopy: [],\r\n    editIndex: \"\",\r\n    editSubCategory: false\r\n}\r\n\r\nexport default subCategoriesState;","import subCategoriesState from \"../States/subCategoriesState\";\r\nimport { Set_Sub_Category_Name,\r\n    Set_Category_In_Sub_Category,\r\n    Add_Sub_Category_Name,\r\n    Get_All_Sub_Categories,\r\n    Update_Sub_Category_Name,\r\n    Delete_Sub_Category,\r\n    Edit_Sub_Category } from \"../Actions/actionTypes\"\r\n\r\nlet subCategoriesReducer = ( state = subCategoriesState, action ) => {\r\n    let stateCopy = JSON.parse(JSON.stringify(state));\r\n\r\n    switch (action.type){\r\n\r\n        case Get_All_Sub_Categories:\r\n            console.log(action.payload)\r\n            if (action.payload.data.success === true){\r\n                stateCopy.subCategories = action.payload.data.subCategories\r\n            }\r\n            console.log(stateCopy);\r\n            return stateCopy\r\n\r\n        case Set_Category_In_Sub_Category:\r\n            stateCopy.subCategory.category = action.payload;\r\n            console.log(stateCopy)\r\n            return stateCopy\r\n\r\n        case Set_Sub_Category_Name:\r\n            stateCopy.subCategory.subCategoryName = action.payload;\r\n            console.log(stateCopy);\r\n            return stateCopy\r\n\r\n        case Add_Sub_Category_Name:\r\n            stateCopy.subCategories.push(action.payload.data.subCategory2);\r\n            console.log(stateCopy);\r\n            return stateCopy\r\n\r\n        case Edit_Sub_Category:\r\n            stateCopy.editIndex = action.payload;\r\n            stateCopy.subCategory = stateCopy.subCategories[action.payload]\r\n            stateCopy.editSubCategory = true;\r\n            console.log(stateCopy);\r\n            return stateCopy;\r\n\r\n        case Update_Sub_Category_Name:\r\n            console.log(action.payload);\r\n            let eIndex = stateCopy.editIndex;\r\n            stateCopy.subCategories[eIndex] = action.payload.data.updated;\r\n            stateCopy.editSubCategory = false;\r\n            console.log(stateCopy);\r\n            return stateCopy;\r\n\r\n        case Delete_Sub_Category:\r\n            console.log(action.payload);\r\n            let dIndex = action.dIndex;\r\n            stateCopy.subCategories.splice(dIndex, 1);\r\n            console.log(stateCopy);\r\n            return stateCopy;\r\n\r\n        default:\r\n        return stateCopy;\r\n    }\r\n}\r\n\r\nexport default subCategoriesReducer;","\r\nlet subSubCategoriesState = {\r\n    subSubCategory: {\r\n        _id: \"\",\r\n        subSubCategoryName: \"\",\r\n        category: \"\",\r\n        subCategory: \"\",\r\n        products: [],\r\n    },\r\n    subSubCategories: [{\r\n        subSubCategoryName: \"Mobile Charger\",\r\n        category: \"\",\r\n        subCategory: \"\",\r\n        products: [],\r\n    },{\r\n        subSubCategoryName: \"Mobile Back Cover\",\r\n        category: \"\",\r\n        subCategory: \"\",\r\n        products: [],\r\n    }],\r\n    subSubCategoriesCopy: [],\r\n    editIndex: \"\",\r\n    editSubSubCategory: false,\r\n    categoryToFilter: {},\r\n    filterSubCategories: false,\r\n    filteredSubCategories: [],\r\n}\r\n\r\nexport default subSubCategoriesState;","import subSubCategoriesState from \"../States/subSubCategoriesState\";\r\nimport { Set_Sub_Sub_Category_Name,\r\n    Set_Category_In_Sub_Sub_Category,\r\n    Set_Sub_Category_In_Sub_Sub_Category,\r\n    Add_Sub_Sub_Category_Name,\r\n    Get_All_Sub_Sub_Categories,\r\n    Update_Sub_Sub_Category,\r\n    Delete_Sub_Sub_Category,\r\n    Edit_Sub_Sub_Category } from \"../Actions/actionTypes\"\r\n;\r\nlet subSubCategoriesReducer = ( state = subSubCategoriesState, action ) => {\r\n    let stateCopy = JSON.parse(JSON.stringify(state));\r\n    \r\n    switch (action.type){\r\n\r\n        case Get_All_Sub_Sub_Categories:\r\n            if (action.payload.data.success === true){\r\n                stateCopy.subSubCategories = action.payload.data.subSubCategories\r\n            }\r\n            console.log(stateCopy);\r\n            return stateCopy;\r\n\r\n        case Set_Sub_Sub_Category_Name:\r\n            stateCopy.subSubCategory.subSubCategoryName = action.payload;\r\n            console.log(stateCopy);\r\n            return stateCopy;\r\n\r\n        case Set_Category_In_Sub_Sub_Category:\r\n            console.log(action.payload)\r\n            stateCopy.subSubCategory.category = action.payload._id;\r\n            stateCopy.categoryToFilter = action.payload\r\n            stateCopy.filterSubCategories = true;\r\n            stateCopy.filteredSubCategories = action.payload.subCategories;\r\n            console.log(stateCopy);\r\n            return stateCopy;\r\n\r\n        case Set_Sub_Category_In_Sub_Sub_Category:\r\n            console.log(action.payload)\r\n            stateCopy.subSubCategory.subCategory = action.payload;\r\n            console.log(stateCopy);\r\n            return stateCopy;\r\n\r\n        case Add_Sub_Sub_Category_Name:\r\n            console.log(action.payload);\r\n            stateCopy.subSubCategories.push(action.payload.data.subSubCategory2)\r\n            stateCopy.filterSubCategories = false;\r\n            console.log(stateCopy);\r\n            return stateCopy;\r\n\r\n        case Edit_Sub_Sub_Category:\r\n            console.log(action.payload);\r\n            stateCopy.editSubSubCategory = true;\r\n            stateCopy.editIndex = action.payload;\r\n            stateCopy.subSubCategory = stateCopy.subSubCategories[action.payload]\r\n            stateCopy.filteredSubCategories = stateCopy.categoryToFilter.subCategories;\r\n            console.log(stateCopy);\r\n            return stateCopy;\r\n\r\n        case Update_Sub_Sub_Category:\r\n            console.log(action.payload);\r\n            let eIndex = stateCopy.editIndex;\r\n            stateCopy.subSubCategories[eIndex] = action.payload.data.updated;\r\n            stateCopy.filterSubCategories = false;\r\n            stateCopy.editSubSubCategory = false;\r\n            console.log(stateCopy);\r\n            return stateCopy;\r\n\r\n        case Delete_Sub_Sub_Category:\r\n            console.log(action.payload);\r\n            console.log(\"delete index => \"+action.dIndex);\r\n            let dIndex = action.dIndex\r\n            stateCopy.subSubCategories.splice(dIndex, 1);\r\n            console.log(stateCopy);\r\n            return stateCopy;\r\n\r\n        default:\r\n        return stateCopy;\r\n    }\r\n}\r\n\r\nexport default subSubCategoriesReducer;","let productState = {\r\n    product: {\r\n        _id: \"\",\r\n        productName : \"\",\r\n        brandName: \"\",\r\n        productDescription : \"\",\r\n        category: \"\",\r\n        subCategory : \"\",\r\n        subSubCategory : \"\",\r\n        totalRatings: \"\",\r\n        avgRating: \"\",\r\n        ratings: { 1: '10', 2: '20', 3: '30', 4: '40', 5: '50', 6: '60', 7: '70', 8: '80', 9: '90', 10: '100'},\r\n        reviews: [],\r\n        images: [],\r\n        image: \"\"\r\n    },\r\n    editProduct: false,\r\n    editIndex: \"\",\r\n    filters_1: {\r\n        categoryToFilter: \"\",\r\n        filterSubCategories: false,\r\n        filteredSubCategories: \"\",\r\n        subCategoryToFilter: \"\",\r\n        filterSubSubCategories: false,\r\n        filteredSubSubCategories: \"\"\r\n    },\r\n    products: [\r\n        {\r\n            _id: \"\",\r\n            productName : \"Product 1\",\r\n            brandName: \"Brand name 1\",\r\n            productDescription : \"Description 1\",\r\n            category: \"\",\r\n            subCategory : \"\",\r\n            subSubCategory : \"\",\r\n            totalRatings: \"\",\r\n            avgRating: \"\",\r\n            ratings: { 1: '10', 2: '20', 3: '30', 4: '40', 5: '50', 6: '60', 7: '70', 8: '80', 9: '90', 10: '100'},\r\n            reviews: [],\r\n            image: \"\",\r\n            images: []\r\n        },\r\n        {\r\n            _id: \"\",\r\n            productName : \"Product 2\",\r\n            brandName: \"Brand Name 2\",\r\n            productDescription : \"Description 2\",\r\n            category: \"\",\r\n            subCategory : \"\",\r\n            subSubCategory : \"\",\r\n            totalRatings: \"\",\r\n            avgRating: \"\",\r\n            ratings: { 1: '10', 2: '20', 3: '30', 4: '40', 5: '50', 6: '60', 7: '70', 8: '80', 9: '90', 10: '100'},\r\n            reviews: [],\r\n            images: [],\r\n            image: \"\",\r\n        },\r\n    ],\r\n    productObject: {\r\n        _id: \"\",\r\n        productName : \"\",\r\n        brandName: \"\",\r\n        productDescription : \"\",\r\n        category: \"\",\r\n        subCategory : \"\",\r\n        subSubCategory : \"\",\r\n        totalRatings: \"\",\r\n        avgRating: \"\",\r\n        ratings: { 1: '10', 2: '20', 3: '30', 4: '40', 5: '50', 6: '60', 7: '70', 8: '80', 9: '90', 10: '100'},\r\n        reviews: [],\r\n        images: [],\r\n        image: \"\"\r\n    }\r\n}\r\n\r\nexport default productState;","import productState from \"../States/productState\";\r\nimport { \r\n    Get_All_Products,\r\n    Get_Product,\r\n    Set_Product_Name,\r\n    Set_Brand_Name,\r\n    Set_Product_Image,\r\n    Set_Product_Description, \r\n    Set_Product_Category, \r\n    Set_Product_Sub_Category, \r\n    Set_Product_Sub_Sub_Category, \r\n    Add_Product,\r\n    Edit_Product,\r\n    Delete_Product,\r\n    Update_Product,\r\n    Send_Product_Id } from \"../Actions/actionTypes.js\"\r\n\r\nlet productReducer = ( state = productState, action ) => {\r\n    let stateCopy = JSON.parse(JSON.stringify(state));\r\n\r\n    switch (action.type) {\r\n\r\n        case Get_All_Products:\r\n            console.log(action.payload);\r\n            stateCopy.products = action.payload.data.products;\r\n            console.log(stateCopy);\r\n            return stateCopy;\r\n\r\n        case Get_Product:\r\n            console.log(action.payload);\r\n            state.product = action.payload.data.product;\r\n            state.product.avgRating = action.payload.data.product.avgRating.$numberDecimal;\r\n            console.log(state)\r\n            return state\r\n\r\n        case Set_Product_Name:\r\n            stateCopy.product.productName = action.payload;\r\n            console.log(stateCopy)\r\n            return stateCopy\r\n\r\n        case Set_Brand_Name:\r\n            stateCopy.product.brandName = action.payload;\r\n            console.log(stateCopy)\r\n            return stateCopy\r\n\r\n        case Set_Product_Image:\r\n            stateCopy.product.image = action.payload;\r\n            console.log(stateCopy)\r\n            return stateCopy\r\n\r\n        case Set_Product_Description:\r\n            stateCopy.product.productDescription = action.payload;\r\n            console.log(stateCopy)\r\n            return stateCopy\r\n            \r\n        case Set_Product_Category:\r\n            console.log(action.payload)\r\n            stateCopy.product.category = action.payload._id;\r\n            stateCopy.filters_1.filterSubCategories = true;\r\n            stateCopy.filters_1.categoryToFilter = action.payload;\r\n            stateCopy.filters_1.filteredSubCategories = action.payload.subCategories;\r\n            console.log(stateCopy)\r\n            return stateCopy\r\n            \r\n        case Set_Product_Sub_Category:\r\n            console.log(action.payload);\r\n            stateCopy.product.subCategory = action.payload._id;\r\n            stateCopy.filters_1.filterSubSubCategories = true;\r\n            stateCopy.filters_1.subCategoryToFilter = action.payload;\r\n            stateCopy.filters_1.filteredSubSubCategories = action.payload.subSubCategories;\r\n            console.log(stateCopy)\r\n            return stateCopy\r\n\r\n        case Set_Product_Sub_Sub_Category:\r\n            stateCopy.product.subSubCategory = action.payload;\r\n            console.log(stateCopy)\r\n            return stateCopy\r\n\r\n        case Add_Product:\r\n            console.log(action.payload);\r\n            stateCopy.products.push(action.payload.data.product);\r\n            stateCopy.filters_1.filterSubCategories = false;\r\n            stateCopy.filters_1.filterSubSubCategories = false;\r\n            console.log(stateCopy)\r\n            return stateCopy;\r\n\r\n        case Edit_Product:\r\n            let eIndex = action.payload;\r\n            stateCopy.editIndex = action.payload;\r\n            stateCopy.editProduct = true;\r\n            stateCopy.product._id = stateCopy.products[eIndex]._id;\r\n            stateCopy.product.productName = stateCopy.products[eIndex].productName;\r\n            stateCopy.product.brandName = stateCopy.products[eIndex].brandName;\r\n            stateCopy.product.image = stateCopy.products[eIndex].image;\r\n            stateCopy.product.productDescription = stateCopy.products[eIndex].productDescription;\r\n            stateCopy.product.category = stateCopy.products[eIndex].category;\r\n            stateCopy.product.subCategory = stateCopy.products[eIndex].subCategory;\r\n            stateCopy.product.subSubCategory = stateCopy.products[eIndex].subSubCategory;\r\n\r\n            console.log(stateCopy);\r\n            return stateCopy\r\n\r\n        case Update_Product:\r\n            console.log(action.payload);\r\n            let uIndex = stateCopy.editIndex;\r\n            stateCopy.products[uIndex] = action.payload.data.updated\r\n            stateCopy.editProduct = false;\r\n            console.log(stateCopy)\r\n            return stateCopy\r\n\r\n        case Delete_Product:\r\n            console.log(action.payload);\r\n            let pdArray = stateCopy.products;\r\n            let dIndex\r\n            for (let i = 0; i < pdArray.length; i++){\r\n                if (pdArray[i]._id === action.payload.data.product._id){\r\n                    dIndex = i\r\n                }\r\n            }\r\n            pdArray.splice(dIndex, 1)\r\n            stateCopy.products = pdArray;\r\n            console.log(stateCopy)\r\n            return stateCopy\r\n\r\n        case Send_Product_Id:\r\n            let id = action.payload;\r\n            state.product._id = id;\r\n            let products = state.products\r\n            for (let i = 0; i < products.length; i++) {\r\n                if (products[i]._id === id) {\r\n                    state.product = products[i]\r\n                }\r\n            }\r\n            state.product.avgRating = state.product.avgRating.$numberDecimal\r\n            console.log(state)\r\n            return state\r\n\r\n        default:\r\n            return stateCopy;\r\n    }\r\n}\r\n\r\nexport default productReducer;","let userState = {\r\n    user: {\r\n        _id: \"\",\r\n        firstName: \"\",\r\n        middleName: \"\",\r\n        lastName: \"\",\r\n        username: \"\",\r\n        emailId : \"\",\r\n        password : \"\",\r\n        token: \"\",\r\n        ratings: [],\r\n        reviews: [],\r\n        likedReviews: [],\r\n        dislikedReviews: []\r\n    },\r\n    loginDetails:{\r\n        username: \"\",\r\n        emailId: \"\",\r\n        password: \"\"\r\n    },\r\n    loginStatus: {\r\n        emailId: \"\",\r\n        username: \"\",\r\n        loggedIn: false,\r\n        userIsAdmin: false,\r\n        loginRedirect: \"\",\r\n        logoutRedirect: \"\",\r\n        registrationRedirect: \"\"\r\n    },\r\n    headers: {\r\n        \"Authorization\": \"\",\r\n        \"Content-Type\": \"application/json\"\r\n    },\r\n    userUpdate: {\r\n        firstName: \"\",\r\n        middleName: \"\",\r\n        lastName: \"\",\r\n        username: \"\",\r\n        emailId : \"\",\r\n        oldPassword: \"\",\r\n        newPassword : \"\",\r\n        repeatPassword: \"\"\r\n    },\r\n    errors: {\r\n        firstName: { message: \"\", success: null },\r\n        middleName: { message: \"\", success: null },\r\n        lastName: { message: \"\", success: null },\r\n        username: { message: \"\", success: null },\r\n        emailId : { message: \"\", success: null },\r\n        password: { message: \"\", success: null },\r\n        oldPassword: { message: \"\", success: null },\r\n        newPassword : { message: \"\", success: null },\r\n        repeatPassword: { message: \"\", success: null },\r\n    },\r\n    users: [],\r\n    usersCopy: [],\r\n    firstPassword: null,\r\n}\r\n\r\nexport default userState;","import userState from \"../States/userState\";\r\nimport validator from \"validator\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nimport { \r\n    Set_User_First_Name,\r\n    Set_User_Middle_Name,\r\n    Set_User_Last_Name,\r\n    Set_User_Username,\r\n    Set_User_Email_Id,\r\n    Set_First_Password,\r\n    Set_Second_Password,\r\n    Register_User,\r\n    Is_User_Logged_In,\r\n    Get_Login_Username_Or_Email_ID,\r\n    Get_Login_Password,\r\n    Set_Login_Redirect,\r\n    User_Logout,\r\n    Get_User_Info,\r\n    Set_User_Update,\r\n    Set_Update_First_Name,\r\n    Set_Update_Middle_Name,\r\n    Set_Update_Last_Name,\r\n    Set_Update_Username,\r\n    Set_Update_Email_Id,\r\n    Set_Update_Old_Password,\r\n    Set_Update_New_Password,\r\n    Set_Update_Repeat_Password,\r\n    Update_User_Name,\r\n    Update_User_Username,\r\n    Update_User_Email_Id,\r\n    Update_User_Password } from \"../Actions/actionTypes.js\";\r\n\r\nlet userReducer = ( state = userState, action ) => {\r\n    let stateCopy = JSON.parse(JSON.stringify(state));\r\n \r\n    switch(action.type) {      \r\n\r\n        case Set_User_First_Name:\r\n            stateCopy.user.firstName = action.payload\r\n            return stateCopy\r\n\r\n        case Set_User_Middle_Name:\r\n            stateCopy.user.middleName = action.payload\r\n            return stateCopy\r\n\r\n        case Set_User_Last_Name:\r\n            stateCopy.user.lastName = action.payload\r\n            return stateCopy\r\n\r\n        case Set_User_Username:\r\n            stateCopy.user.username = action.payload\r\n            return stateCopy\r\n\r\n        case Set_User_Email_Id:\r\n            let email = validator.isEmail(action.payload);\r\n            if(email === true){\r\n                stateCopy.errors.emailId.success = false;\r\n                stateCopy.user.emailId = action.payload\r\n            } else {\r\n                stateCopy.errors.emailId.success = true;\r\n            }\r\n            return stateCopy\r\n\r\n        case Set_First_Password:\r\n            stateCopy.firstPassword = action.payload\r\n            return stateCopy\r\n\r\n        case Set_Second_Password:\r\n            if (stateCopy.firstPassword === action.payload){\r\n                stateCopy.user.password = action.payload\r\n                stateCopy.errors.password = false\r\n            } else {\r\n                stateCopy.errors.password = true\r\n            }\r\n            return stateCopy\r\n\r\n        case Register_User:\r\n            \r\n            return stateCopy\r\n\r\n        case Is_User_Logged_In:\r\n            console.log(action.payload)\r\n            console.log(\"Cookie \"+Cookies.get(\"userToken\"))\r\n            state.user._id = action.payload.data.user._id;\r\n            state.user.username = action.payload.data.user.username;\r\n            state.user.emailId = action.payload.data.user.emailId;\r\n            state.loginStatus.loggedIn = action.payload.data.success;\r\n            state.loginStatus.userIsAdmin = action.payload.data.userIsAdmin;\r\n            if (action.payload.data.success === true && action.payload.data.userIsAdmin === false) {\r\n                state.loginStatus.loginRedirect = \"/user-account\"\r\n            } else if (action.payload.data.success === true && state.loginStatus.userIsAdmin === true) {\r\n                state.loginStatus.loginRedirect = \"/admin-dashboard\"\r\n            } else {\r\n                state.loginStatus.loginRedirect = \"/\"\r\n            }\r\n            console.log(state)\r\n            return state;\r\n\r\n        case Get_Login_Username_Or_Email_ID:\r\n            if (validator.isEmail(action.payload) === true) {\r\n                stateCopy.loginDetails.emailId = action.payload\r\n            } else {\r\n                stateCopy.loginDetails.username = action.payload\r\n            }\r\n            console.log(stateCopy);\r\n            return stateCopy\r\n\r\n        case Get_Login_Password:\r\n            stateCopy.loginDetails.password = action.payload;\r\n            return stateCopy\r\n\r\n        case Set_Login_Redirect:\r\n            console.log(action.payload)\r\n            Cookies.set(\"userToken\", action.payload.data.token)\r\n            state.loginStatus.loggedIn = action.payload.data.success;\r\n            state.loginStatus.userIsAdmin = action.payload.data.userIsAdmin;\r\n            state.loginStatus.emailId = action.payload.data.emailId;\r\n            state.loginStatus.username = action.payload.data.username;\r\n            state.headers.Authorization = action.payload.data.token;\r\n            if (state.loginStatus.userIsAdmin === false) {\r\n                state.user = action.payload.data.user\r\n                state.loginStatus.loginRedirect = \"/user-dashboard\"\r\n            } else if (state.loginStatus.userIsAdmin === true) {\r\n                state.user = action.payload.data.admin\r\n                state.loginStatus.loginRedirect = \"/admin-dashboard\"\r\n            }\r\n            console.log(\"Cookie \"+Cookies.get(\"userToken\"))\r\n            console.log(state);\r\n            return state\r\n        \r\n        case User_Logout:\r\n            console.log(action.payload)\r\n            Cookies.remove(\"userToken\")\r\n            state.loginStatus.loggedIn = !action.payload.data.success;\r\n            state.user.token = \"\";\r\n            state.headers.Authorization = \"\";\r\n            state.loginStatus.logoutRedirect = \"/\";\r\n            state.loginStatus.userIsAdmin = false;\r\n            console.log(state);\r\n            return state\r\n\r\n        case Get_User_Info:\r\n            console.log(action.payload);\r\n            // stateCopy.user = action.payload.data.user,\r\n            stateCopy.user._id = action.payload.data.user._id;\r\n            stateCopy.user.firstName = action.payload.data.user.firstName;\r\n            stateCopy.user.middleName = action.payload.data.user.middleName;\r\n            stateCopy.user.lastName = action.payload.data.user.lastName;\r\n            stateCopy.user.username = action.payload.data.user.username;\r\n            stateCopy.user.emailId = action.payload.data.user.emailId;\r\n            console.log(stateCopy)\r\n            return stateCopy;\r\n\r\n        case Set_User_Update:\r\n            stateCopy.userUpdate.firstName = stateCopy.user.firstName;\r\n            stateCopy.userUpdate.middleName = stateCopy.user.middleName;\r\n            stateCopy.userUpdate.lastName = stateCopy.user.lastName;\r\n            stateCopy.userUpdate.username = stateCopy.user.username;\r\n            stateCopy.userUpdate.emailId = stateCopy.user.emailId;\r\n            console.log(stateCopy)\r\n            return stateCopy;\r\n\r\n        case Set_Update_First_Name:\r\n            stateCopy.userUpdate.firstName = action.payload\r\n            console.log(stateCopy)\r\n            return stateCopy;\r\n\r\n        case Set_Update_Middle_Name:\r\n            stateCopy.userUpdate.middleName = action.payload\r\n            console.log(stateCopy)\r\n            return stateCopy;\r\n\r\n        case Set_Update_Last_Name:\r\n            stateCopy.userUpdate.lastName = action.payload\r\n            console.log(stateCopy)\r\n            return stateCopy;\r\n\r\n        case Set_Update_Username:\r\n            stateCopy.userUpdate.username = action.payload\r\n            console.log(stateCopy)\r\n            return stateCopy;\r\n\r\n        case Set_Update_Email_Id:\r\n            stateCopy.userUpdate.emailId = action.payload\r\n            console.log(stateCopy)\r\n            return stateCopy;\r\n\r\n        case Set_Update_Old_Password:\r\n            stateCopy.userUpdate.oldPassword = action.payload\r\n            console.log(stateCopy)\r\n            return stateCopy;\r\n\r\n        case Set_Update_New_Password:\r\n            stateCopy.userUpdate.newPassword = action.payload\r\n            console.log(stateCopy)\r\n            return stateCopy;\r\n\r\n        case Set_Update_Repeat_Password:\r\n            stateCopy.userUpdate.repeatPassword = action.payload\r\n            console.log(stateCopy)\r\n            return stateCopy;\r\n\r\n        case Update_User_Name:\r\n            console.log(action.payload)\r\n            stateCopy.errors.emailId.message = action.payload.data.message;\r\n            stateCopy.errors.emailId.success = action.payload.data.success;\r\n            console.log(stateCopy);\r\n            return stateCopy;\r\n\r\n        case Update_User_Username:\r\n            console.log(action.payload)\r\n            stateCopy.errors.emailId.message = action.payload.data.message;\r\n            stateCopy.errors.emailId.success = action.payload.data.success;\r\n            console.log(stateCopy);\r\n            return stateCopy;\r\n\r\n        case Update_User_Email_Id:\r\n            console.log(action.payload)\r\n            stateCopy.errors.emailId.message = action.payload.data.message;\r\n            stateCopy.errors.emailId.success = action.payload.data.success;\r\n            console.log(stateCopy);\r\n            return stateCopy;\r\n\r\n        case Update_User_Password:\r\n            console.log(action.payload)\r\n            stateCopy.errors.emailId.message = action.payload.data.message;\r\n            stateCopy.errors.emailId.success = action.payload.data.success;\r\n            console.log(stateCopy);\r\n            return stateCopy;\r\n\r\n        default:\r\n            return stateCopy\r\n    }\r\n}\r\n\r\nexport default userReducer;","let ratingsState = {\r\n    rating: {\r\n        _id: \"\",\r\n        rating: \"0\",\r\n        product: \"\",\r\n        user: \"\",\r\n    },\r\n    ratings: [],\r\n    ratingsCopy: [],\r\n    userRatingExists: false,\r\n    editRating: false,\r\n    ratingErrors: {\r\n        rating: {message: \"\", success: null},\r\n        product: {message: \"\", success: null},\r\n        user: {message: \"\", success: null},\r\n    }\r\n}\r\n\r\nexport default ratingsState;","import ratingsState from \"../States/ratingsState\";\r\nimport { Get_User_Rating, Set_User_Rating, Post_User_Rating, Update_User_Rating } from \"../Actions/actionTypes\";\r\n\r\nlet ratingsReducer = ( state = ratingsState, action ) => {\r\n    let stateCopy = JSON.parse(JSON.stringify(state));\r\n\r\n    switch (action.type) {\r\n        case Get_User_Rating:\r\n            console.log(action.payload);\r\n            if (action.payload.data.rating ) {\r\n                let rating = action.payload.data.rating;\r\n                if (rating[0] !== undefined){\r\n                    stateCopy.rating = rating[0];\r\n                    stateCopy.rating.rating = rating[0].rating.$numberDecimal\r\n                    stateCopy.userRatingExists = true\r\n                }\r\n            } else {\r\n                stateCopy.ratingErrors.rating.message = action.payload.data.message\r\n                stateCopy.ratingErrors.rating.success = action.payload.data.success\r\n                stateCopy.userRatingExists = false\r\n            }\r\n            console.log(stateCopy);\r\n            return stateCopy;\r\n\r\n        case Set_User_Rating:\r\n            console.log(action.payload);\r\n            stateCopy.rating.rating = action.payload.rating;\r\n            stateCopy.rating.product = action.payload.product;\r\n            stateCopy.rating.user = action.payload.user;\r\n            console.log(stateCopy);\r\n            return stateCopy\r\n\r\n        case Post_User_Rating:\r\n            console.log(action.payload);\r\n            stateCopy.rating = action.payload.data.rating;\r\n            stateCopy.rating.rating = action.payload.data.rating.rating.$numberDecimal;\r\n            console.log(stateCopy);\r\n            return stateCopy\r\n\r\n        case Update_User_Rating:\r\n            console.log(action.payload);\r\n            stateCopy.rating = action.payload.data.rating;\r\n            stateCopy.rating.rating = action.payload.data.rating.rating.$numberDecimal;\r\n            console.log(stateCopy);\r\n            return stateCopy\r\n\r\n        default:\r\n            return stateCopy;\r\n    }\r\n}\r\n\r\nexport default ratingsReducer;","let reviewsState = {\r\n    review: {\r\n        _id: \"\",\r\n        review: \"\",\r\n        likes: \"\",\r\n        dislikes: \"\",\r\n        date: \"\",\r\n        product: \"\",\r\n        user: \"\",\r\n    },\r\n    reviews: [],\r\n    productReviews: [{\r\n        _id: \"\",\r\n        review: \"\",\r\n        likes: \"\",\r\n        dislikes: \"\",\r\n        date: \"\",\r\n        product: \"\",\r\n        user: {username: \"\"},\r\n    }],\r\n    reviewsCopy: [],\r\n    reviewExists: false,\r\n    editReview: false,\r\n}\r\n\r\nexport default reviewsState;","import reviewsState from \"../States/reviewsState\";\r\nimport { Get_User_Review,\r\n    Get_Product_Reviews,\r\n    Edit_User_Review,\r\n    Set_User_Review,\r\n    Post_User_Review,\r\n    Update_User_Review,\r\n    Delete_User_Review } from \"../Actions/actionTypes\";\r\n\r\nlet reviewsReducer = ( state = reviewsState, action ) => {\r\n    let stateCopy = JSON.parse(JSON.stringify(state));\r\n    \r\n    switch (action.type) {\r\n        \r\n        case Get_User_Review:\r\n            console.log(action.payload);\r\n            if (action.payload.data.success === true){\r\n                if(action.payload.data.review[0] === undefined){\r\n                    state.reviewExists = false;\r\n                } else {\r\n                    state.review = action.payload.data.review[0];\r\n                    state.reviewExists = true;\r\n                }\r\n            } else {\r\n                state.reviewExists = false;\r\n            }\r\n            console.log(state);\r\n            return state;\r\n\r\n        case Get_Product_Reviews:\r\n            console.log(action.payload);\r\n            state.productReviews = action.payload.data.reviews\r\n            if(state.productReviews[0] === undefined){\r\n                let pReviews= {\r\n                    review: \"\",\r\n                    user: {username: \"\"},\r\n                    date: \"\"\r\n                }\r\n                state.productReviews.push(pReviews)\r\n            }\r\n            console.log(state);\r\n            return state;\r\n\r\n        case Edit_User_Review:\r\n            console.log(action.payload);\r\n            state.editReview = true;\r\n            console.log(state);\r\n            return state;\r\n\r\n        case Set_User_Review:\r\n            console.log(action.payload);\r\n            state.review.review = action.payload.review;\r\n            state.review.product = action.payload.product;\r\n            state.review.user = action.payload.user;\r\n            state.review.date = new Date()\r\n            console.log(state);\r\n            return state;\r\n\r\n        case Post_User_Review:\r\n            console.log(action.payload);\r\n            state.review = action.payload.data.review;\r\n            state.editReview = false;\r\n            state.reviewExists = true;\r\n            console.log(state);\r\n            return state;\r\n\r\n        case Update_User_Review:\r\n            console.log(action.payload);\r\n            state.review = action.payload.data.review;\r\n            state.editReview = false;\r\n            console.log(\"Username => \"+state.review.user.username);\r\n            console.log(state);\r\n            return state;\r\n\r\n        case Delete_User_Review:\r\n            console.log(action.payload);\r\n            state.reviewExists = false;\r\n            console.log(state);\r\n            return state;\r\n\r\n        default:\r\n            return stateCopy;\r\n    }\r\n}\r\n\r\nexport default reviewsReducer;","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport categoriesReducer from \"./Reducers/categoriesReducer\";\r\nimport subCategoriesReducer from \"./Reducers/subCategoriesReducer\";\r\nimport subSubCategoriesReducer from \"./Reducers/subSubCategoriesReducer\";\r\nimport productReducer from \"./Reducers/productReducer\";\r\nimport userReducer from \"./Reducers/userReducer\";\r\nimport ratingsReducer from \"./Reducers/ratingsReducer\";\r\nimport reviewsReducer from \"./Reducers/reviewsReducer\";\r\n\r\nconst rootReducers = combineReducers({\r\n    categories: categoriesReducer,\r\n    subCategories: subCategoriesReducer,\r\n    subSubCategories: subSubCategoriesReducer,\r\n    products: productReducer,\r\n    users: userReducer,\r\n    ratings: ratingsReducer,\r\n    reviews: reviewsReducer\r\n});\r\n\r\nconst store = createStore(rootReducers, applyMiddleware(thunk));\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./Redux/store\";\r\n\r\nReactDOM.render(\r\n    <Provider store={store} >\r\n      <App />\r\n    </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n\r\n// <React.StrictMode>\r\n// </React.StrictMode>\r\n"],"sourceRoot":""}